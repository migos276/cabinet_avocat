<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title><?php echo SITE_NAME; ?> - Avocats Spécialisés</title>
    <meta name="description" content="Cabinet d'avocats d'excellence spécialisé en droit des affaires, droit de la famille et droit pénal. Expertise juridique reconnue depuis plus de 20 ans.">
    <meta name="keywords" content="avocat, cabinet juridique, droit des affaires, droit de la famille, droit pénal, conseil juridique, expertise">
    <meta name="author" content="<?php echo SITE_NAME; ?>">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    

    <style>
        /* Variables CSS pour la cohérence */
        :root {
            --primary-blue: #1e3a8a;
            --secondary-blue: #3b82f6;
            --light-blue: #dbeafe;
            --accent-gold: #f59e0b;
            --accent-green: #10b981;
            --accent-purple: #8b5cf6;
            --text-dark: #1f2937;
            --text-light: #6b7280;
            --white: #ffffff;
            --gray-50: #f9fafb;
            --gray-100: #f3f4f6;
            --gray-800: #1f2937;
            --shadow-light: rgba(0, 0, 0, 0.1);
            --shadow-medium: rgba(0, 0, 0, 0.15);
            --gradient-bg: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 100%);
            --success-color: #059669;
            --danger-color: #dc2626;
            --border-color: #d1d5db;
            --bg-light: #f9fafb;
            --primary-color: #2563eb;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: var(--text-dark);
        }

        /* Navbar Styles */
        .navbar {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            transition: all 0.3s ease;
            padding: 0.5rem 0;
            box-shadow: 0 2px 20px rgba(0, 0, 0, 0.08);
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 1rem;
        }

        .navbar .container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .navbar-brand {
            text-decoration: none;
            transition: all 0.3s ease;
        }

        .brand-container {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .brand-icon {
            width: 3rem;
            height: 3rem;
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            border-radius: 0.75rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .brand-icon i {
            color: white;
            font-size: 1.25rem;
        }

        .brand-text h1 {
            font-size: 1.1rem;
            font-weight: 700;
            color: var(--text-dark);
            margin: 0;
        }

        .brand-text p {
            font-size: 0.7rem;
            color: var(--text-light);
            margin: -0.25rem 0 0 0;
        }

        .navbar-nav {
            display: flex;
            align-items: center;
            gap: 1.5rem;
            list-style: none;
        }

        .nav-link {
            text-decoration: none;
            color: #374151;
            font-weight: 500;
            padding: 0.4rem 0.8rem;
            border-radius: 0.4rem;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            font-size: 0.9rem;
        }

        .nav-link:hover, .nav-link.active {
            color: #2563eb;
            background-color: rgba(37, 99, 235, 0.1);
        }

        .nav-link i {
            margin-right: 0.5rem;
        }

 .btn {
    display: inline-flex;
    align-items: center;
    padding: 0.6rem;
    padding-left: 1.8rem; /* Espacement à gauche */
    padding-right: 1.8rem; /* Espacement à droite */
    border-radius: 0.6rem;
    font-weight: 600;
    text-decoration: none;
    transition: all 0.3s ease;
    border: none;
    cursor: pointer;
    font-size: 0.9rem;
}
        .btn-primary {
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            color: white;
            box-shadow: 0 3px 12px rgba(37, 99, 235, 0.3);
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #1d4ed8, #1e40af);
            transform: translateY(-1px);
            box-shadow: 0 4px 16px rgba(37, 99, 235, 0.4);
        }

        .btn-secondary {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
        }

        .btn-outline {
            background: transparent;
            border: 2px solid currentColor;
            color: var(--primary-blue);
        }

        .btn-lg {
            padding: 0.75rem 1.5rem;
            font-size: 1rem;
        }

        /* Mobile Menu */
        .mobile-menu-toggle {
            display: none;
            background: none;
            border: none;
            font-size: 1.3rem;
            color: #374151;
            cursor: pointer;
            padding: 0.4rem;
            border-radius: 0.4rem;
            transition: all 0.3s ease;
        }

        .mobile-menu {
            display: none;
            position: absolute;
            top: 100%;
            left: 0;
            right: 0;
            background: white;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            padding: 1rem;
        }

        .mobile-nav {
            display: flex;
            flex-direction: column;
            gap: 1rem;
        }

        /* Hero Section */
        .hero {
            background: linear-gradient(135deg,
                rgba(94, 124, 206, 0.9) 0%,
                rgba(178, 202, 241, 0.8) 100%),
                url('public/images/avocat2.jpg') no-repeat center center;
            background-size: cover;
            background-position: center;
            min-height: 100vh;
            display: flex;
            align-items: center;
            text-align: center;
            color: white;
            padding-top: 80px;
        }

        .hero-content {
            max-width: 800px;
            margin: 0 auto;
            opacity: 0;
            transform: translateY(50px);
            animation: fadeInUp 1s ease-out 0.5s forwards;
        }

        .hero h1 {
            font-size: 3.5rem;
            font-weight: 800;
            margin-bottom: 1.5rem;
            background: linear-gradient(135deg, #ffffff, #e2e8f0);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .hero .lead {
            font-size: 1.3rem;
            margin-bottom: 2rem;
            opacity: 0.9;
        }

        .hero-buttons {
            display: flex;
            justify-content: center;
            gap: 1rem;
            align-items: center;
        }

        /* Sections générales */
        .section {
            padding: 80px 0;
        }

        .section-title {
            text-align: center;
            margin-bottom: 4rem;
        }

        .section-title .badge {
            display: inline-block;
            background: var(--light-blue);
            color: var(--primary-blue);
            padding: 0.5rem 1rem;
            border-radius: 1rem;
            font-size: 0.9rem;
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .section-title h2 {
            font-size: 2.5rem;
            color: var(--primary-blue);
            margin-bottom: 1rem;
            font-weight: 700;
        }

        .section-title .lead {
            font-size: 1.2rem;
            color: var(--text-light);
            max-width: 600px;
            margin: 0 auto;
        }

        /* About Section */
        .section_about {
            padding: 80px 0;
            background: var(--gradient-bg);
        }

        .about-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 4rem;
            align-items: center;
        }

        .image-area {
            position: relative;
            height: 500px;
            border-radius: 20px;
            overflow: hidden;
            background: linear-gradient(135deg, #dbeafe 0%, #bfdbfe 50%, #93c5fd 100%);
        }

        .image-area img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .decorative-element {
            position: absolute;
            border-radius: 50%;
            opacity: 0.7;
        }

        .decorative-element.blue {
            width: 120px;
            height: 120px;
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
            top: 10%;
            left: 10%;
            animation: float 6s ease-in-out infinite;
        }

        .decorative-element.yellow {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, #f59e0b, #d97706);
            top: 60%;
            right: 20%;
            animation: float 6s ease-in-out infinite 2s;
        }

        .decorative-element.purple {
            width: 100px;
            height: 100px;
            background: linear-gradient(135deg, #8b5cf6, #7c3aed);
            bottom: 20%;
            left: 60%;
            animation: float 6s ease-in-out infinite 4s;
        }

        .feature-card {
            display: flex;
            align-items: center;
            gap: 1rem;
            padding: 1.5rem;
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 15px var(--shadow-light);
            transition: all 0.3s ease;
            margin-bottom: 1rem;
        }

        .feature-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px var(--shadow-medium);
        }

        .feature-icon {
            width: 60px;
            height: 60px;
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
        }

        .feature-icon.blue {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        }

        .feature-icon.yellow {
            background: linear-gradient(135deg, #f59e0b, #d97706);
        }

        .feature-title {
            font-weight: 700;
            color: var(--text-dark);
            margin-bottom: 0.25rem;
        }

        .feature-subtitle {
            color: var(--text-light);
            font-size: 0.9rem;
        }

        /* Services Grid */
        .services-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 2rem;
        }

        .service-card {
            background: white;
            border-radius: 20px;
            padding: 2.5rem;
            text-align: center;
            box-shadow: 0 5px 15px var(--shadow-light);
            transition: all 0.3s ease;
        }

        .service-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px var(--shadow-medium);
        }

        .service-icon {
            width: 80px;
            height: 80px;
            margin: 0 auto 1.5rem;
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .service-icon i {
            font-size: 2rem;
            color: white;
        }

        .service-card h4 {
            font-size: 1.5rem;
            color: var(--primary-blue);
            margin-bottom: 1rem;
        }

        .service-card p {
            color: var(--text-light);
            margin-bottom: 1.5rem;
            line-height: 1.6;
        }

        /* Contact Form */
        .contact-section {
            background: var(--gradient-bg);
        }

        .contact-form {
            background: white;
            border-radius: 20px;
            padding: 3rem;
            box-shadow: 0 20px 60px var(--shadow-light);
            max-width: 800px;
            margin: 0 auto;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 0.5rem;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: #f9fafb;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--secondary-blue);
            background: white;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .form-control-lg {
            padding: 1rem 1.25rem;
            font-size: 1.1rem;
        }

        /* Footer */
        .footer {
            background: linear-gradient(135deg, #1f2937, #111827);
            color: white;
            padding: 4rem 0 2rem;
        }

        .footer-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .footer-section h6 {
            font-size: 1.2rem;
            font-weight: 700;
            margin-bottom: 1rem;
        }

        .footer-section a {
            color: #d1d5db;
            text-decoration: none;
            transition: color 0.3s ease;
            display: block;
            margin-bottom: 0.5rem;
        }

        .footer-section a:hover {
            color: white;
        }

        .footer-bottom {
            border-top: 1px solid #374151;
            padding-top: 2rem;
            text-align: center;
            color: #9ca3af;
        }

        /* Scroll to Top */
        .scroll-to-top {
            position: fixed;
            bottom: 2rem;
            right: 2rem;
            width: 50px;
            height: 50px;
            background: var(--secondary-blue);
            color: white;
            border: none;
            border-radius: 50%;
            box-shadow: 0 4px 15px rgba(59, 130, 246, 0.3);
            cursor: pointer;
            transition: all 0.3s ease;
            opacity: 0;
            transform: scale(0);
            z-index: 999;
        }

        .scroll-to-top.show {
            opacity: 1;
            transform: scale(1);
        }

        .scroll-to-top:hover {
            background: var(--primary-blue);
            transform: scale(1.1);
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(50px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes float {
            0%, 100% {
                transform: translateY(0px);
            }
            50% {
                transform: translateY(-20px);
            }
        }

        /* Alert Messages */
        .alert {
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 1rem;
            font-weight: 500;
        }

        .alert-success {
            background: #dcfce7;
            color: #166534;
            border: 1px solid #bbf7d0;
        }

        .alert-error {
            background: #fef2f2;
            color: #991b1b;
            border: 1px solid #fecaca;
        }

        /* Section Nos Valeurs */
        .values-section {
            padding: 80px 0;
            background: var(--white);
            position: relative;
            overflow: hidden;
        }

        .values-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 100%;
            background: linear-gradient(135deg, 
                rgba(30, 58, 138, 0.02) 0%, 
                rgba(59, 130, 246, 0.03) 50%, 
                rgba(245, 158, 11, 0.02) 100%);
            z-index: 1;
        }

        .values-section .container {
            position: relative;
            z-index: 2;
        }

        .badge {
            display: inline-block;
            background: var(--light-blue);
            color: var(--primary-blue);
            padding: 0.5rem 1rem;
            border-radius: 1rem;
            font-size: 0.9rem;
            font-weight: 600;
            margin-bottom: 1rem;
        }

        .values-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .value-card {
            background: var(--white);
            border-radius: 20px;
            padding: 2.5rem;
            text-align: center;
            box-shadow: 0 8px 25px var(--shadow-light);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            position: relative;
            overflow: hidden;
            border: 1px solid rgba(59, 130, 246, 0.08);
        }

        .value-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(135deg, var(--secondary-blue), var(--accent-gold));
            transform: scaleX(0);
            transform-origin: left;
            transition: transform 0.4s ease;
        }

        .value-card:hover::before {
            transform: scaleX(1);
        }

        .value-card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 15px 40px var(--shadow-medium);
        }

        .value-icon {
            width: 80px;
            height: 80px;
            margin: 0 auto 1.5rem;
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            transition: all 0.4s ease;
        }

        .value-icon i {
            font-size: 2.2rem;
            color: white;
            z-index: 2;
            position: relative;
            transition: transform 0.4s ease;
        }

        .value-card:hover .value-icon i {
            transform: scale(1.1) rotate(5deg);
        }

        .value-icon.blue {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
        }

        .value-icon.gold {
            background: linear-gradient(135deg, #f59e0b, #d97706);
        }

        .value-icon.green {
            background: linear-gradient(135deg, #10b981, #059669);
        }

        .value-card h4 {
            font-size: 1.4rem;
            color: var(--primary-blue);
            margin-bottom: 1rem;
            font-weight: 700;
            transition: color 0.3s ease;
        }

        .value-card:hover h4 {
            color: var(--secondary-blue);
        }

        .value-card p {
            color: var(--text-light);
            line-height: 1.7;
            margin-bottom: 1.5rem;
            opacity: 0.9;
            transition: all 0.3s ease;
        }

        .value-card:hover p {
            opacity: 1;
            color: var(--text-dark);
        }

        .values-commitment {
            background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
            border-radius: 20px;
            padding: 3rem;
            text-align: center;
            margin-top: 3rem;
            position: relative;
            overflow: hidden;
        }

        .values-commitment::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(59, 130, 246, 0.05) 0%, transparent 70%);
            animation: rotate 20s linear infinite;
        }

        .commitment-content {
            position: relative;
            z-index: 2;
        }

        .commitment-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .stat-item {
            padding: 1rem;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 800;
            color: var(--primary-blue);
            display: block;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: var(--text-light);
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.9rem;
            letter-spacing: 0.5px;
        }

        .commitment-text {
            max-width: 600px;
            margin: 0 auto;
            font-size: 1.1rem;
            color: var(--text-dark);
            line-height: 1.6;
        }

        @keyframes rotate {
            from {
                transform: rotate(0deg);
            }
            to {
                transform: rotate(360deg);
            }
        }

        .fade-in-up {
            animation: fadeInUp 0.8s ease-out forwards;
        }

        /* Styles pour l'upload de fichiers */
        .file-upload-section {
            margin: 2rem 0;
            padding: 1.5rem;
            border: 2px dashed var(--border-color);
            border-radius: 0.5rem;
            background: var(--bg-light);
            transition: all 0.3s ease;
        }

        .file-upload-section.drag-over {
            border-color: var(--primary-color);
            background: rgba(37, 99, 235, 0.05);
        }

        .file-upload-header {
            text-align: center;
            margin-bottom: 1rem;
        }

        .file-upload-icon {
            font-size: 2rem;
            color: var(--text-light);
            margin-bottom: 0.5rem;
        }

        .file-input {
            display: none;
        }

        .file-upload-button {
            background: var(--primary-color);
            color: white;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 0.5rem;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .file-upload-button:hover {
            background: var(--secondary-blue);
        }

        .file-preview {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1rem;
            margin-top: 1rem;
        }

        .file-item {
            background: white;
            border: 1px solid var(--border-color);
            border-radius: 0.5rem;
            padding: 1rem;
            position: relative;
        }

        .file-item-header {
            display: flex;
            justify-content: space-between;
            align-items: start;
            margin-bottom: 0.5rem;
        }

        .file-icon {
            font-size: 1.5rem;
            color: var(--danger-color);
        }

        .file-remove {
            background: none;
            border: none;
            color: var(--text-light);
            cursor: pointer;
            padding: 0.25rem;
            border-radius: 50%;
            transition: all 0.3s ease;
        }

        .file-remove:hover {
            background: var(--danger-color);
            color: white;
        }

        .file-info {
            font-size: 0.875rem;
        }

        .file-name {
            font-weight: 600;
            margin-bottom: 0.25rem;
            word-break: break-word;
        }

        .file-size {
            color: var(--text-light);
        }

        .file-status {
            margin-top: 0.5rem;
            font-size: 0.75rem;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
            display: inline-block;
        }

        .file-status.success {
            background: rgba(5, 150, 105, 0.1);
            color: var(--success-color);
        }

        .file-status.error {
            background: rgba(220, 38, 38, 0.1);
            color: var(--danger-color);
        }

        .upload-info {
            margin-top: 0.5rem;
            font-size: 0.875rem;
            color: var(--text-light);
            text-align: center;
        }

        .file-preview-btn {
            background: var(--secondary-blue);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            cursor: pointer;
            font-size: 0.8rem;
            margin-top: 0.5rem;
            transition: all 0.3s ease;
        }

        .file-preview-btn:hover {
            background: var(--primary-blue);
            transform: translateY(-1px);
        }

        #contactMessage {
            margin-bottom: 1rem;
            padding: 1rem;
            border-radius: 0.5rem;
            display: none;
        }

        #contactMessage.success {
            background: rgba(5, 150, 105, 0.1);
            color: var(--success-color);
            border: 1px solid var(--success-color);
        }

        #contactMessage.error {
            background: rgba(220, 38, 38, 0.1);
            color: var(--danger-color);
            border: 1px solid var(--danger-color);
        }

        /* Styles pour modal de prévisualisation */
        .file-preview-modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 10000;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .modal-backdrop {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 2rem;
        }
        
        .modal-content {
            background: white;
            border-radius: 15px;
            max-width: 90vw;
            max-height: 90vh;
            overflow: hidden;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
        }
        
        .modal-header {
            padding: 1rem 1.5rem;
            border-bottom: 1px solid #e5e7eb;
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #f8fafc;
        }
        
        .modal-header h3 {
            margin: 0;
            font-size: 1.2rem;
            color: #1f2937;
        }
        
        .modal-close {
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #6b7280;
            cursor: pointer;
            padding: 0.5rem;
            border-radius: 50%;
            transition: all 0.3s ease;
        }
        
        .modal-close:hover {
            background: #ef4444;
            color: white;
        }
        
        .modal-body {
            padding: 1.5rem;
            text-align: center;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .navbar-nav {
                display: none;
            }

            .mobile-menu-toggle {
                display: block;
            }

            .hero h1 {
                font-size: 2.5rem;
            }

            .hero .lead {
                font-size: 1.1rem;
            }

            .hero-buttons {
                flex-direction: column;
            }

            .about-grid {
                grid-template-columns: 1fr;
                gap: 2rem;
            }

            .image-area {
                height: 300px;
            }

            .section-title h2 {
                font-size: 2rem;
            }

            .services-grid {
                grid-template-columns: 1fr;
            }

            .form-grid {
                grid-template-columns: 1fr;
            }

            .contact-form {
                padding: 2rem;
            }

            .section {
                padding: 60px 0;
            }

            .footer-grid {
                grid-template-columns: 1fr;
            }

            .values-section {
                padding: 60px 0;
            }

            .values-grid {
                grid-template-columns: 1fr;
                gap: 1.5rem;
            }

            .value-card {
                padding: 2rem;
            }

            .values-commitment {
                padding: 2rem;
            }

            .commitment-stats {
                grid-template-columns: repeat(2, 1fr);
                gap: 1rem;
            }

            .stat-number {
                font-size: 2rem;
            }

            .modal-content {
                max-width: 95vw;
                max-height: 95vh;
                margin: 1rem;
            }
            
            .modal-body iframe,
            .modal-body img {
                width: 100%;
                height: auto !important;
                max-height: 60vh !important;
            }
        }

        @media (max-width: 480px) {
            .hero h1 {
                font-size: 2rem;
            }

            .container {
                padding: 0 0.5rem;
            }

            .service-card {
                padding: 1.5rem;
            }

            .value-card {
                padding: 1.5rem;
            }

            .value-icon {
                width: 70px;
                height: 70px;
            }

            .value-icon i {
                font-size: 1.8rem;
            }

            .commitment-stats {
                grid-template-columns: 1fr;
            }
        }

        /* Utility Classes */
        .text-center { text-align: center; }
        .mb-4 { margin-bottom: 1rem; }
        .mb-6 { margin-bottom: 1.5rem; }
        .mb-8 { margin-bottom: 2rem; }
        .max-w-4xl { max-width: 56rem; }
        .mx-auto { margin-left: auto; margin-right: auto; }
    /* Team Section Horizontal Scroll */
.team-container {
    position: relative;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 3rem;
    display: flex;
    align-items: center;
}

.team-grid {
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: thin;
    scrollbar-color: var(--secondary-blue) var(--gray-100);
    gap: 2rem;
    padding: 1rem 0;
}

.team-grid::-webkit-scrollbar {
    height: 8px;
}

.team-grid::-webkit-scrollbar-track {
    background: var(--gray-100);
    border-radius: 4px;
}

.team-grid::-webkit-scrollbar-thumb {
    background: var(--secondary-blue);
    border-radius: 4px;
}

.team-grid::-webkit-scrollbar-thumb:hover {
    background: var(--primary-blue);
}

.team-card {
    flex: 0 0 300px;
    background: white;
    border-radius: 20px;
    padding: 2.5rem;
    text-align: center;
    box-shadow: 0 5px 15px var(--shadow-light);
    transition: all 0.3s ease;
    scroll-snap-align: center;
    min-width: 300px;
}

.team-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 30px var(--shadow-medium);
}

.team-image {
    width: 100%;
    height: 250px;
    object-fit: cover;
    border-radius: 15px;
    margin-bottom: 1.5rem;
}

.team-position {
    color: var(--secondary-blue);
    font-weight: 600;
    margin-bottom: 0.5rem;
}

.team-description {
    color: var(--text-light);
    line-height: 1.6;
}

.team-nav-btn {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: var(--white);
    border: 2px solid var(--border-color);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 2px 8px var(--shadow-light);
    z-index: 10;
}

.team-nav-prev {
    left: 0;
}

.team-nav-next {
    right: 0;
}

.team-nav-btn:hover {
    background: var(--secondary-blue);
    color: var(--white);
    border-color: var(--secondary-blue);
    transform: translateY(-50%) scale(1.1);
}

.team-nav-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.team-nav-btn i {
    font-size: 1.2rem;
}

/* Responsive Design */
@media (max-width: 768px) {
    .team-container {
        padding: 0 2rem;
    }

    .team-grid {
        gap: 1.5rem;
    }

    .team-card {
        flex: 0 0 280px;
        min-width: 280px;
    }

    .team-nav-btn {
        width: 35px;
        height: 35px;
    }

    .team-nav-btn i {
        font-size: 1rem;
    }
}

@media (max-width: 480px) {
    .team-container {
        padding: 0 1rem;
    }

    .team-grid {
        gap: 1rem;
    }

    .team-card {
        flex: 0 0 260px;
        min-width: 260px;
        padding: 1.5rem;
    }

    .team-nav-btn {
        width: 30px;
        height: 30px;
    }
}

/* News Section Styles */
.news-section {
    padding: 80px 0;
    background: var(--gradient-bg);
}

.news-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
}

.news-card {
    background: white;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 5px 15px var(--shadow-light);
    transition: all 0.3s ease;
}

.news-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 15px 30px var(--shadow-medium);
}

.news-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
}

.news-content {
    padding: 2rem;
}

.news-date {
    font-size: 0.9rem;
    color: var(--text-light);
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.news-title {
    font-size: 1.5rem;
    color: var(--primary-blue);
    margin-bottom: 1rem;
}

.news-excerpt {
    color: var(--text-dark);
    line-height: 1.6;
    margin-bottom: 1.5rem;
}

@media (max-width: 768px) {
    .news-grid {
        grid-template-columns: 1fr;
    }
    
    .news-content {
        padding: 1.5rem;
    }
    
    .news-title {
        font-size: 1.3rem;
    }
}

    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar" id="navbar">
        <div class="container">
            <a href="/" class="navbar-brand">
                <div class="brand-container">
                    <div class="brand-icon">
                        <i class="fas fa-balance-scale"></i>
                    </div>
                    <div class="brand-text">
                        <h1>Cabinet Excellence</h1>
                        <p>Avocats Spécialisés</p>
                    </div>
                </div>
            </a>

            <ul class="navbar-nav">
                <li><a href="#home" class="nav-link active">
                    <i class="fas fa-home"></i>Accueil
                </a></li>
                <li><a href="#about" class="nav-link">
                    <i class="fas fa-info-circle"></i>À propos
                </a></li>
                <li><a href="#services" class="nav-link">
                    <i class="fas fa-gavel"></i>Nos services
                </a></li>
                <li><a href="#team" class="nav-link">
                    <i class="fas fa-users"></i>Équipe
                </a></li>
                <li><a href="#contact" class="btn btn-primary">
                    <i class="fas fa-calendar-alt" style="margin-right: 0.5rem;"></i>Contact
                </a></li>
            </ul>

            <button class="mobile-menu-toggle" onclick="toggleMobileMenu()">
                <i class="fas fa-bars"></i>
            </button>
            
            <div class="mobile-menu" id="mobileMenu">
                <div class="mobile-nav">
                    <a href="#home" class="nav-link">Accueil</a>
                    <a href="#about" class="nav-link">À propos</a>
                    <a href="#services" class="nav-link">Nos services</a>
                    <a href="#team" class="nav-link">Équipe</a>
                    <a href="#contact" class="nav-link">Contact</a>
                </div>
            </div>
        </div>
    </nav>

    <!-- Hero Section -->
    <section id="home" class="hero">
        <div class="container">
            <div class="hero-content">
                <h1><?php echo htmlspecialchars($content['hero']['title'] ?? 'Excellence Juridique à Votre Service'); ?></h1>
                <p class="lead">
                    <?php echo htmlspecialchars($content['hero']['subtitle'] ?? 'Depuis plus de 20 ans, nous accompagnons nos clients avec expertise, intégrité et dévouement dans tous leurs défis juridiques les plus complexes.'); ?>
                </p>
                <div class="hero-buttons">
                    <a href="#contact" class="btn btn-secondary btn-lg">
                        <i class="fas fa-calendar-alt" style="margin-right: 0.75rem;"></i>
                        <span>PRENDRE RENDEZ-VOUS</span>
                    </a>
                </div>
            </div>
        </div>
    </section>

    <!-- About Section -->
    <section id="about" class="section_about">
        <div class="container">
            <div class="about-grid">
                <div class="image-area">
                    <img src="public/images/avocat1.jpg" alt="Avocat en action">
                    <div class="decorative-element blue"></div>
                    <div class="decorative-element yellow"></div>
                    <div class="decorative-element purple"></div>
                </div>
                <div>
                    <span class="badge">À propos de nous</span>
                    <h2 class="mb-6"><?php echo htmlspecialchars($content['about']['title'] ?? 'Votre Réussite, Notre Mission'); ?></h2>
                    <p class="lead mb-6">
                        <?php echo htmlspecialchars($content['about']['subtitle'] ?? 'Fort d\'une expérience reconnue et d\'une approche personnalisée, notre cabinet vous offre un accompagnement juridique d\'excellence adapté à vos besoins spécifiques.'); ?>
                    </p>

                    <div class="feature-cards mb-8">
                        <div class="feature-card">
                            <div class="feature-icon blue">
                                <i class="fas fa-shield-alt"></i>
                            </div>
                            <div>
                                <h4 class="feature-title">Confidentialité</h4>
                                <p class="feature-subtitle">Absolue</p>
                            </div>
                        </div>
                        <div class="feature-card">
                            <div class="feature-icon yellow">
                                <i class="fas fa-handshake"></i>
                            </div>
                            <div>
                                <h4 class="feature-title">Accompagnement</h4>
                                <p class="feature-subtitle">Personnalisé</p>
                            </div>
                        </div>
                    </div>

                    <p class="mb-6" style="color: var(--text-light); line-height: 1.6;">
                        Que vous soyez un particulier ou une entreprise, nous mettons notre expertise à votre disposition
                        pour défendre vos intérêts et vous accompagner dans vos projets les plus complexes.
                    </p>

                    <a href="#services" class="btn btn-primary">
                        <i class="fas fa-arrow-right"></i>
                        En savoir plus
                    </a>
                </div>
            </div>
        </div>
    </section>

    <!-- Section Nos Valeurs -->
    <section class="values-section">
        <div class="container">
            <div class="section-title">
                <span class="badge">Nos valeurs</span>
                <h2>Les Principes qui Nous Guident</h2>
                <p class="lead">
                    Des valeurs fortes et authentiques qui définissent notre approche professionnelle et notre engagement envers nos clients
                </p>
            </div>

            <div class="values-grid">
                <div class="value-card fade-in-up" style="animation-delay: 0.1s;">
                    <div class="value-icon blue">
                        <i class="fas fa-shield-alt"></i>
                    </div>
                    <h4>Intégrité</h4>
                    <p>
                        L'honnêteté et la transparence sont au cœur de toutes nos relations. Nous privilégions 
                        toujours la vérité et agissons avec une éthique irréprochable dans chaque dossier.
                    </p>
                </div>

                <div class="value-card fade-in-up" style="animation-delay: 0.2s;">
                    <div class="value-icon gold">
                        <i class="fas fa-trophy"></i>
                    </div>
                    <h4>Excellence</h4>
                    <p>
                        Nous visons l'excellence dans chaque mission, en actualisant constamment nos connaissances 
                        et en déployant tout notre savoir-faire pour obtenir les meilleurs résultats.
                    </p>
                </div>

                <div class="value-card fade-in-up" style="animation-delay: 0.3s;">
                    <div class="value-icon green">
                        <i class="fas fa-handshake"></i>
                    </div>
                    <h4>Engagement</h4>
                    <p>
                        Votre réussite est notre priorité. Nous nous engageons pleinement dans chaque dossier 
                        avec détermination et persévérance jusqu'à l'obtention du résultat souhaité.
                    </p>
                </div>   
            </div>

            <!-- Section engagement/statistiques -->
            <div class="values-commitment fade-in-up" style="animation-delay: 0.6s;">
                <div class="commitment-content">
                    <div class="commitment-stats">
                        <div class="stat-item">
                            <span class="stat-number">20+</span>
                            <span class="stat-label">Années d'expérience</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number">98%</span>
                            <span class="stat-label">Clients satisfaits</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number">1000+</span>
                            <span class="stat-label">Dossiers traités</span>
                        </div>
                        <div class="stat-item">
                            <span class="stat-number">24h</span>
                            <span class="stat-label">Délai de réponse</span>
                        </div>
                    </div>
                    
                    <div class="commitment-text">
                        <strong>Notre engagement :</strong> Chaque client mérite une approche personnalisée et des conseils 
                        juridiques de la plus haute qualité. Ces valeurs ne sont pas seulement des mots, elles guident 
                        chacune de nos décisions et actions au quotidien.
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Services Section -->
    <section id="services" class="section">
        <div class="container">
            <div class="section-title">
                <span class="badge mb-4">Nos spécialisations</span>
                <h2><?php echo htmlspecialchars($content['services']['title'] ?? 'Domaines d\'Expertise'); ?></h2>
                <p class="lead">
                    <?php echo htmlspecialchars($content['services']['subtitle'] ?? 'Une expertise reconnue dans des domaines juridiques essentiels pour répondre à tous vos besoins'); ?>
                </p>
            </div>

            <div class="services-grid">
                <?php foreach ($services as $service): ?>
                <div class="service-card">
                    <div class="service-icon" style="background: <?php echo htmlspecialchars($service['color']); ?>;">
                        <i class="<?php echo htmlspecialchars($service['icon']); ?>"></i>
                    </div>
                    <h4><?php echo htmlspecialchars($service['title']); ?></h4>
                    <p><?php echo htmlspecialchars($service['description']); ?></p>
                    <a href="/service/<?php echo $service['id']; ?>" class="btn btn-outline">
                        <i class="fas fa-arrow-right"></i>
                        En savoir plus
                    </a>
                </div>
                <?php endforeach; ?>
            </div>
        </div>
    </section>
    <!-- Team Section -->
    <section id="team" class="section" style="background: var(--gradient-bg);">
        <div class="container">
            <div class="section-title">
                <span class="badge mb-4">Notre équipe</span>
                <h2><?php echo htmlspecialchars($content['team']['title'] ?? 'Des Experts à Vos Côtés'); ?></h2>
                <p class="lead">
                    <?php echo htmlspecialchars($content['team']['subtitle'] ?? 'Des avocats expérimentés et passionnés, reconnus pour leur expertise et leur engagement'); ?>
                </p>
            </div>

            <div class="team-container">
                <button class="team-nav-btn team-nav-prev" aria-label="Précédent">
                    <i class="fas fa-chevron-left"></i>
                </button>
                <div class="team-grid">
                    <?php foreach ($team as $member): ?>
                    <div class="team-card">
                        <img src="<?php echo htmlspecialchars($member['image_path']); ?>"
                             alt="<?php echo htmlspecialchars($member['name']); ?>"
                             class="team-image">
                        <h4><?php echo htmlspecialchars($member['name']); ?></h4>
                        <p class="team-position"><?php echo htmlspecialchars($member['position']); ?></p>
                        <p class="team-description"><?php echo htmlspecialchars($member['description']); ?></p>
                    </div>
                    <?php endforeach; ?>
                </div>
                <button class="team-nav-btn team-nav-next" aria-label="Suivant">
                    <i class="fas fa-chevron-right"></i>
                </button>
            </div>
        </div>
    </section>

    <!-- News Section -->
    <section id="news" class="news-section section">
        <div class="container">
            <div class="section-title">
                <span class="badge mb-4">Actualités</span>
                <h2>Nos dernières actualités</h2>
                <p class="lead">
                    Restez informé des nouveautés du cabinet et des événements importants
                </p>
            </div>

            <div class="news-grid">
                <?php foreach ($news as $item): ?>
                <div class="news-card">
                    <?php if ($item['image_path']): ?>
                    <img src="<?php echo htmlspecialchars($item['image_path']); ?>" alt="<?php echo htmlspecialchars($item['title']); ?>" class="news-image">
                    <?php endif; ?>
                    <div class="news-content">
                        <p class="news-date">
                            <i class="fas fa-calendar-alt"></i>
                            <?php echo date('d F Y', strtotime($item['publish_date'])); ?>
                        </p>
                        <h4 class="news-title"><?php echo htmlspecialchars($item['title']); ?></h4>
                        <div class="news-excerpt">
                            <?php echo nl2br(htmlspecialchars(substr(strip_tags($item['content']), 0, 200))); ?>...
                        </div>
                        <a href="#news-<?php echo $item['id']; ?>" class="btn btn-outline">
                            <i class="fas fa-arrow-right"></i>
                            Lire la suite
                        </a>
                    </div>
                </div>
                <?php endforeach; ?>
            </div>
        </div>
    </section>

    <!-- Contact Section -->
    <section id="contact" class="section contact-section">
        <div class="container">
            <div class="max-w-4xl mx-auto">
                <div class="section-title">
                    <span class="badge mb-4">Nous contacter</span>
                    <h2>Parlons de Votre Situation</h2>
                    <p class="lead">
                        Bénéficiez d'un premier échange gratuit pour évaluer vos besoins juridiques
                    </p>
                </div>
                <div class="contact-form">
                    <div id="contactMessage"></div>
                    <form id="contactForm" method="POST" action="/contact" enctype="multipart/form-data">
                        <div class="form-grid">
                            <div class="form-group">
                                <label for="name" class="form-label">Nom complet *</label>
                                <input type="text" class="form-control form-control-lg" id="name" name="name" required>
                            </div>
                            <div class="form-group">
                                <label for="email" class="form-label">Email *</label>
                                <input type="email" class="form-control form-control-lg" id="email" name="email" required>
                            </div>
                        </div>
                        <div class="form-grid">
                            <div class="form-group">
                                <label for="phone" class="form-label">Téléphone</label>
                                <input type="tel" class="form-control form-control-lg" id="phone" name="phone">
                            </div>
                            <div class="form-group">
                                <label for="subject" class="form-label">Domaine juridique</label>
                                <select class="form-control form-control-lg" id="subject" name="subject">
                                    <option value="">Sélectionnez un domaine</option>
                                    <option value="droit-des-affaires">Droit des Affaires</option>
                                    <option value="droit-de-la-famille">Droit de la Famille</option>
                                    <option value="droit-penal">Droit Pénal</option>
                                    <option value="droit-immobilier">Droit Immobilier</option>
                                    <option value="droit-du-travail">Droit du Travail</option>
                                    <option value="droit-des-assurances">Droit des Assurances</option>
                                    <option value="autre">Autre</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group mb-8">
                            <label for="message" class="form-label">Décrivez votre situation *</label>
                            <textarea class="form-control form-control-lg" id="message" name="message" rows="5" required
                                      placeholder="Expliquez-nous brièvement votre situation juridique..."></textarea>
                        </div>
                        
                        <!-- Section d'upload de fichiers -->
                        <div class="file-upload-section" id="fileUploadSection">
                            <div class="file-upload-header">
                                <div class="file-upload-icon">
                                    <i class="fas fa-cloud-upload-alt"></i>
                                </div>
                                <h3>Joindre des documents</h3>
                                <p>Glissez-déposez vos fichiers ici ou cliquez pour sélectionner</p>
                                <input type="file" id="fileInput" name="documents[]" multiple accept=".pdf,.doc,.docx,.jpg,.jpeg,.png" class="file-input">
                                <button type="button" class="file-upload-button" onclick="document.getElementById('fileInput').click()">
                                    <i class="fas fa-plus"></i> Sélectionner des fichiers
                                </button>
                            </div>
                            <div class="upload-info">
                                <i class="fas fa-info-circle"></i>
                                Formats acceptés : PDF, DOC, DOCX, JPG, PNG (Max: 10MB par fichier)
                            </div>
                            <div class="file-preview" id="filePreview"></div>
                        </div>
                        
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-lg" style="padding: 1rem 2rem;">
                                <i class="fas fa-paper-plane"></i>
                                Demander une consultation
                            </button>
                            <p style="color: var(--text-light); font-size: 0.9rem; margin-top: 1rem;">
                                <i class="fas fa-shield-alt"></i>
                                Vos données sont protégées et confidentielles
                            </p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="footer">
        <div class="container">
            <div class="footer-grid">
                <!-- Company Info -->
                <div class="footer-section">
                    <div class="brand-container mb-4">
                        <div class="brand-icon">
                            <i class="fas fa-balance-scale"></i>
                        </div>
                        <div class="brand-text">
                            <h6 style="color: white; margin: 0;">Cabinet Excellence</h6>
                            <p style="color: #9ca3af; font-size: 0.9rem; margin: 0;">Avocats Spécialisés</p>
                        </div>
                    </div>
                    <p style="color: #d1d5db; line-height: 1.6; margin-bottom: 1rem;">
                        Excellence juridique et accompagnement personnalisé pour tous vos besoins légaux depuis plus de 20 ans.
                    </p>
                </div>

                <!-- Navigation -->
                <div class="footer-section">
                    <h6>Navigation</h6>
                    <a href="#home">Accueil</a>
                    <a href="#about">À propos</a>
                    <a href="#services">Expertises</a>
                    <a href="#team">Équipe</a>
                    <a href="#contact">Contact</a>
                </div>

                <!-- Expertise Areas -->
                <div class="footer-section">
                    <h6>Domaines d'expertise</h6>
                    <?php foreach (array_slice($services, 0, 6) as $service): ?>
                    <a href="#services"><?php echo htmlspecialchars($service['title']); ?></a>
                    <?php endforeach; ?>
                </div>

                <!-- Contact Info -->
                <div class="footer-section">
                    <h6>Contact</h6>
                    <div style="margin-bottom: 1rem;">
                        <p style="color: #d1d5db; margin: 0; display: flex; align-items: flex-start; gap: 0.5rem;">
                            <i class="fas fa-map-marker-alt" style="color: #60a5fa; margin-top: 0.2rem;"></i>
                            <span>123 Avenue des Champs-Élysées<br>75008 Paris, France</span>
                        </p>
                    </div>
                    <p style="color: #d1d5db; margin: 0.5rem 0; display: flex; align-items: center; gap: 0.5rem;">
                        <i class="fas fa-phone" style="color: #60a5fa;"></i>
                        <a href="tel:+33123456789" style="color: #d1d5db;">+33 1 23 45 67 89</a>
                    </p>
                    <p style="color: #d1d5db; margin: 0.5rem 0; display: flex; align-items: center; gap: 0.5rem;">
                        <i class="fas fa-envelope" style="color: #60a5fa;"></i>
                        <a href="mailto:<?php echo ADMIN_EMAIL; ?>" style="color: #d1d5db;"><?php echo ADMIN_EMAIL; ?></a>
                    </p>
                    <p style="color: #d1d5db; margin: 0.5rem 0; display: flex; align-items: flex-start; gap: 0.5rem;">
                        <i class="fas fa-clock" style="color: #60a5fa; margin-top: 0.2rem;"></i>
                        <span>Lun-Ven: 9h-18h<br>Sam: 9h-12h</span>
                    </p>
                </div>
            </div>

            <div class="footer-bottom">
                <p>© <?php echo date('Y'); ?> <?php echo SITE_NAME; ?>. Tous droits réservés.</p>
            </div>
        </div>
    </footer>

    <!-- Scroll to Top Button -->
    <button class="scroll-to-top" id="scrollToTop">
        <i class="fas fa-arrow-up"></i>
    </button>

    <script>
        function initializeTeamScroll() {
    const teamGrid = document.querySelector('.team-grid');
    const prevBtn = document.querySelector('.team-nav-prev');
    const nextBtn = document.querySelector('.team-nav-next');

    if (!teamGrid || !prevBtn || !nextBtn) return;

    function updateButtonState() {
        const scrollLeft = teamGrid.scrollLeft;
        const maxScroll = teamGrid.scrollWidth - teamGrid.clientWidth;

        prevBtn.disabled = scrollLeft <= 0;
        nextBtn.disabled = scrollLeft >= maxScroll - 1;
    }

    prevBtn.addEventListener('click', () => {
        teamGrid.scrollBy({
            left: -320,
            behavior: 'smooth'
        });
    });

    nextBtn.addEventListener('click', () => {
        teamGrid.scrollBy({
            left: 320,
            behavior: 'smooth'
        });
    });

    teamGrid.addEventListener('scroll', updateButtonState);
    window.addEventListener('resize', updateButtonState);
    updateButtonState();

    // Gestion du défilement tactile
    let isDragging = false;
    let startX, scrollLeft;

    teamGrid.addEventListener('touchstart', (e) => {
        isDragging = true;
        startX = e.touches[0].pageX - teamGrid.offsetLeft;
        scrollLeft = teamGrid.scrollLeft;
    });

    teamGrid.addEventListener('touchend', () => {
        isDragging = false;
    });

    teamGrid.addEventListener('touchmove', (e) => {
        if (!isDragging) return;
        e.preventDefault();
        const x = e.touches[0].pageX - teamGrid.offsetLeft;
        const walk = (x - startX) * 2;
        teamGrid.scrollLeft = scrollLeft - walk;
    });
}

// Initialisation au chargement de la page
document.addEventListener('DOMContentLoaded', initializeTeamScroll);
        // Mobile Menu Toggle
        function toggleMobileMenu() {
            const mobileMenu = document.getElementById('mobileMenu');
            const toggle = document.querySelector('.mobile-menu-toggle i');
            
            if (mobileMenu.style.display === 'block') {
                mobileMenu.style.display = 'none';
                toggle.className = 'fas fa-bars';
            } else {
                mobileMenu.style.display = 'block';
                toggle.className = 'fas fa-times';
            }
        }

        // Close mobile menu when clicking on links
        document.querySelectorAll('.mobile-nav a').forEach(link => {
            link.addEventListener('click', () => {
                document.getElementById('mobileMenu').style.display = 'none';
                document.querySelector('.mobile-menu-toggle i').className = 'fas fa-bars';
            });
        });

        // Navbar scroll effect
        window.addEventListener('scroll', function() {
            const navbar = document.getElementById('navbar');
            if (window.scrollY > 50) {
                navbar.style.background = 'rgba(255, 255, 255, 0.98)';
            } else {
                navbar.style.background = 'rgba(255, 255, 255, 0.95)';
            }
        });

        // Smooth scrolling for navigation links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    const offsetTop = target.offsetTop - 80;
                    window.scrollTo({
                        top: offsetTop,
                        behavior: 'smooth'
                    });
                }
            });
        });

        // Active navigation highlighting
        window.addEventListener('scroll', function() {
            const sections = document.querySelectorAll('section[id]');
            const navLinks = document.querySelectorAll('.nav-link:not(.btn)');

            let current = '';
            sections.forEach(section => {
                const sectionTop = section.offsetTop - 100;
                const sectionHeight = section.clientHeight;
                if (scrollY >= sectionTop && scrollY < sectionTop + sectionHeight) {
                    current = section.getAttribute('id');
                }
            });

            navLinks.forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('href') === '#' + current) {
                    link.classList.add('active');
                }
            });
        });

        // Scroll to top button
        const scrollToTopBtn = document.getElementById('scrollToTop');
        window.addEventListener('scroll', function() {
            if (window.scrollY > 300) {
                scrollToTopBtn.classList.add('show');
            } else {
                scrollToTopBtn.classList.remove('show');
            }
        });

        scrollToTopBtn.addEventListener('click', function() {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });

        // Close mobile menu when clicking outside
        document.addEventListener('click', function(e) {
            const mobileMenu = document.getElementById('mobileMenu');
            const mobileToggle = document.querySelector('.mobile-menu-toggle');
            
            if (!mobileMenu.contains(e.target) && !mobileToggle.contains(e.target)) {
                mobileMenu.style.display = 'none';
                document.querySelector('.mobile-menu-toggle i').className = 'fas fa-bars';
            }
        });

        // Animation au scroll pour les cartes
        function animateOnScroll() {
            const cards = document.querySelectorAll('.value-card, .values-commitment');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('fade-in-up');
                    }
                });
            }, {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            });

            cards.forEach(card => {
                observer.observe(card);
            });
        }

        // Animation des compteurs
        function animateCounters() {
            const counters = document.querySelectorAll('.stat-number');
            
            counters.forEach(counter => {
                const target = counter.textContent;
                const isPercent = target.includes('%');
                const isPlus = target.includes('+');
                const isTime = target.includes('h');
                
                let endValue;
                if (isPercent) {
                    endValue = parseInt(target);
                } else if (isTime) {
                    endValue = parseInt(target);
                } else if (isPlus) {
                    endValue = parseInt(target);
                } else {
                    endValue = parseInt(target);
                }

                const observer = new IntersectionObserver((entries) => {
                    entries.forEach(entry => {
                        if (entry.isIntersecting) {
                            animateCounter(counter, endValue, isPercent, isPlus, isTime);
                            observer.unobserve(counter);
                        }
                    });
                }, { threshold: 0.5 });

                observer.observe(counter);
            });
        }

        function animateCounter(element, endValue, isPercent, isPlus, isTime) {
            let startValue = 0;
            const duration = 2000;
            const increment = endValue / (duration / 16);

            function updateCounter() {
                if (startValue < endValue) {
                    startValue += increment;
                    let displayValue = Math.floor(startValue);
                    
                    if (isPercent) {
                        element.textContent = displayValue + '%';
                    } else if (isPlus) {
                        element.textContent = displayValue + '+';
                    } else if (isTime) {
                        element.textContent = displayValue + 'h';
                    } else {
                        if (endValue >= 1000) {
                            element.textContent = Math.floor(startValue) + '+';
                        } else {
                            element.textContent = displayValue;
                        }
                    }
                    
                    requestAnimationFrame(updateCounter);
                } else {
                    if (isPercent) {
                        element.textContent = endValue + '%';
                    } else if (isPlus) {
                        element.textContent = endValue + '+';
                    } else if (isTime) {
                        element.textContent = endValue + 'h';
                    } else if (endValue >= 1000) {
                        element.textContent = endValue + '+';
                    } else {
                        element.textContent = endValue;
                    }
                }
            }
            
            updateCounter();
        }

        // Gestionnaire de fichiers - CLASSE UNIQUE POUR ÉVITER LES DOUBLONS
        class FileUploadManager {
            constructor() {
                this.files = [];
                this.maxFileSize = 10 * 1024 * 1024; // 10MB
                this.maxFiles = 5;
                this.allowedTypes = [
                    'application/pdf', 
                    'application/msword', 
                    'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 
                    'image/jpeg', 
                    'image/jpg', 
                    'image/png'
                ];
                this.init();
            }

            init() {
                const fileInput = document.getElementById('fileInput');
                const uploadSection = document.getElementById('fileUploadSection');
                
                if (!fileInput || !uploadSection) return;
                
                // Events pour le drag & drop
                uploadSection.addEventListener('dragover', this.handleDragOver.bind(this));
                uploadSection.addEventListener('dragleave', this.handleDragLeave.bind(this));
                uploadSection.addEventListener('drop', this.handleDrop.bind(this));
                
                // Event pour la sélection de fichiers
                fileInput.addEventListener('change', this.handleFileSelect.bind(this));
                
                // IMPORTANT : UN SEUL gestionnaire pour le formulaire
                const form = document.getElementById('contactForm');
                if (form) {
                    form.addEventListener('submit', this.handleFormSubmit.bind(this));
                }
            }

            handleDragOver(e) {
                e.preventDefault();
                document.getElementById('fileUploadSection').classList.add('drag-over');
            }

            handleDragLeave(e) {
                e.preventDefault();
                if (!e.currentTarget.contains(e.relatedTarget)) {
                    document.getElementById('fileUploadSection').classList.remove('drag-over');
                }
            }

            handleDrop(e) {
                e.preventDefault();
                document.getElementById('fileUploadSection').classList.remove('drag-over');
                const files = Array.from(e.dataTransfer.files);
                this.addFiles(files);
            }

            handleFileSelect(e) {
                const files = Array.from(e.target.files);
                this.addFiles(files);
            }

            addFiles(newFiles) {
                for (const file of newFiles) {
                    if (this.files.length >= this.maxFiles) {
                        this.showMessage(`Maximum ${this.maxFiles} fichiers autorisés`, 'error');
                        break;
                    }

                    if (this.validateFile(file)) {
                        const fileId = 'file_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
                        const fileObj = {
                            id: fileId,
                            file: file,
                            name: file.name,
                            size: file.size,
                            type: file.type,
                            status: 'ready'
                        };
                        
                        this.files.push(fileObj);
                        this.renderFilePreview(fileObj);
                    }
                }
                this.updateFileInput();
            }

            validateFile(file) {
                if (!this.allowedTypes.includes(file.type)) {
                    this.showMessage(`Type de fichier non autorisé: ${file.name}`, 'error');
                    return false;
                }

                if (file.size > this.maxFileSize) {
                    this.showMessage(`Fichier trop volumineux: ${file.name} (Max: 10MB)`, 'error');
                    return false;
                }

                if (this.files.some(f => f.name === file.name && f.size === file.size)) {
                    this.showMessage(`Fichier déjà ajouté: ${file.name}`, 'error');
                    return false;
                }

                return true;
            }

            renderFilePreview(fileObj) {
                const preview = document.getElementById('filePreview');
                const fileItem = document.createElement('div');
                fileItem.className = 'file-item';
                fileItem.id = fileObj.id;

                const iconClass = this.getFileIcon(fileObj.type);
                const formattedSize = this.formatFileSize(fileObj.size);

                fileItem.innerHTML = `
                    <div class="file-item-header">
                        <i class="${iconClass} file-icon"></i>
                        <button type="button" class="file-remove" onclick="window.fileUploader.removeFile('${fileObj.id}')">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <div class="file-info">
                        <div class="file-name">${this.escapeHtml(fileObj.name)}</div>
                        <div class="file-size">${formattedSize}</div>
                        <div class="file-status success">Prêt à envoyer</div>
                    </div>
                    ${this.canPreview(fileObj.type) ? `
                        <div class="file-preview-container">
                            <button type="button" class="file-preview-btn" onclick="window.fileUploader.previewFile('${fileObj.id}')">
                                <i class="fas fa-eye"></i> Aperçu
                            </button>
                        </div>
                    ` : ''}
                `;

                preview.appendChild(fileItem);
            }

            removeFile(fileId) {
                this.files = this.files.filter(f => f.id !== fileId);
                const fileElement = document.getElementById(fileId);
                if (fileElement) {
                    fileElement.remove();
                }
                this.updateFileInput();
            }

            updateFileInput() {
                const fileInput = document.getElementById('fileInput');
                const dataTransfer = new DataTransfer();
                
                this.files.forEach(fileObj => {
                    dataTransfer.items.add(fileObj.file);
                });
                
                fileInput.files = dataTransfer.files;
            }

            canPreview(type) {
                return type === 'application/pdf' || type.startsWith('image/');
            }

            previewFile(fileId) {
                const fileObj = this.files.find(f => f.id === fileId);
                if (!fileObj) return;

                if (fileObj.type === 'application/pdf') {
                    this.previewPDF(fileObj);
                } else if (fileObj.type.startsWith('image/')) {
                    this.previewImage(fileObj);
                }
            }

            previewPDF(fileObj) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    const modal = document.createElement('div');
                    modal.className = 'file-preview-modal';
                    modal.innerHTML = `
                        <div class="modal-backdrop" onclick="this.parentElement.remove()">
                            <div class="modal-content" onclick="event.stopPropagation()">
                                <div class="modal-header">
                                    <h3>${this.escapeHtml(fileObj.name)}</h3>
                                    <button class="modal-close" onclick="this.closest('.file-preview-modal').remove()">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <iframe src="${e.target.result}" style="width: 100%; height: 600px; border: none;"></iframe>
                                </div>
                            </div>
                        </div>
                    `;
                    document.body.appendChild(modal);
                };
                reader.readAsDataURL(fileObj.file);
            }

            previewImage(fileObj) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    const modal = document.createElement('div');
                    modal.className = 'file-preview-modal';
                    modal.innerHTML = `
                        <div class="modal-backdrop" onclick="this.parentElement.remove()">
                            <div class="modal-content" onclick="event.stopPropagation()">
                                <div class="modal-header">
                                    <h3>${this.escapeHtml(fileObj.name)}</h3>
                                    <button class="modal-close" onclick="this.closest('.file-preview-modal').remove()">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <img src="${e.target.result}" style="max-width: 100%; max-height: 80vh; object-fit: contain;" alt="${this.escapeHtml(fileObj.name)}">
                                </div>
                            </div>
                        </div>
                    `;
                    document.body.appendChild(modal);
                };
                reader.readAsDataURL(fileObj.file);
            }

            async handleFormSubmit(e) {
                e.preventDefault();
                e.stopImmediatePropagation(); // Empêche tout autre gestionnaire de se déclencher
                
                const form = e.target;
                const formData = new FormData(form);
                
                // Validation des champs requis
                const requiredFields = form.querySelectorAll('[required]');
                let isValid = true;
                let errors = [];

                requiredFields.forEach(field => {
                    if (!field.value.trim()) {
                        field.style.borderColor = '#ef4444';
                        isValid = false;
                        errors.push(`${field.name} est requis`);
                    } else {
                        field.style.borderColor = '#e5e7eb';
                    }
                });

                // Validation email
                const email = document.getElementById('email');
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (email.value && !emailRegex.test(email.value)) {
                    email.style.borderColor = '#ef4444';
                    isValid = false;
                    errors.push('Format email invalide');
                }

                if (!isValid) {
                    this.showMessage('Erreurs: ' + errors.join(', '), 'error');
                    return;
                }

                const submitButton = form.querySelector('button[type="submit"]');
                const originalText = submitButton.innerHTML;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Envoi en cours...';
                submitButton.disabled = true;

                try {
                    // Ajouter les fichiers au FormData
                    this.files.forEach((fileObj, index) => {
                        formData.append(`documents[${index}]`, fileObj.file);
                    });

                    const response = await fetch('/contact', {
                        method: 'POST',
                        body: formData
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        this.showMessage(
                            data.message + 
                            (data.uploaded_files > 0 ? ` (${data.uploaded_files} fichier(s) joint(s))` : ''), 
                            'success'
                        );
                        form.reset();
                        this.files = [];
                        document.getElementById('filePreview').innerHTML = '';
                        
                        // Reset field borders
                        requiredFields.forEach(field => {
                            field.style.borderColor = '#e5e7eb';
                        });
                    } else {
                        if (data.errors) {
                            this.showMessage('Erreurs: ' + data.errors.join(', '), 'error');
                        } else {
                            this.showMessage(data.message, 'error');
                        }
                    }
                } catch (error) {
                    console.error('Error:', error);
                    this.showMessage('Erreur lors de l\'envoi du message', 'error');
                } finally {
                    submitButton.innerHTML = originalText;
                    submitButton.disabled = false;
                }
            }

            getFileIcon(type) {
                if (type === 'application/pdf') return 'fas fa-file-pdf';
                if (type.includes('word') || type.includes('document')) return 'fas fa-file-word';
                if (type.includes('image')) return 'fas fa-file-image';
                return 'fas fa-file';
            }

            formatFileSize(bytes) {
                if (bytes === 0) return '0 Bytes';
                const k = 1024;
                const sizes = ['Bytes', 'KB', 'MB', 'GB'];
                const i = Math.floor(Math.log(bytes) / Math.log(k));
                return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
            }

            escapeHtml(unsafe) {
                return unsafe
                    .replace(/&/g, "&amp;")
                    .replace(/</g, "&lt;")
                    .replace(/>/g, "&gt;")
                    .replace(/"/g, "&quot;")
                    .replace(/'/g, "&#039;");
            }

            showMessage(text, type) {
                const messageElement = document.getElementById('contactMessage');
                if (!messageElement) return;
                
                messageElement.innerHTML = `
                    <div class="alert alert-${type === 'error' ? 'error' : 'success'}">
                        <i class="fas fa-${type === 'error' ? 'exclamation-triangle' : 'check-circle'}"></i>
                        ${text}
                    </div>
                `;
                messageElement.style.display = 'block';
                
                // Auto-hide après 5 secondes
                setTimeout(() => {
                    messageElement.style.display = 'none';
                }, 5000);
                
                // Scroll vers le message
                messageElement.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
            }
        }

        // Initialisation au chargement de la page - UNE SEULE FOIS
        document.addEventListener('DOMContentLoaded', function() {
            // Initialiser les animations
            animateOnScroll();
            animateCounters();
            
            // Ajouter l'effet parallaxe seulement sur desktop
            if (window.innerWidth > 768) {
                addParallaxEffect();
            }
            
            // Initialiser le gestionnaire de fichiers - STOCKÉ GLOBALEMENT
            window.fileUploader = new FileUploadManager();
            
            console.log('Site Cabinet Juridique Excellence chargé avec succès');
        });

        // Effet parallaxe léger pour les cartes
        function addParallaxEffect() {
            const cards = document.querySelectorAll('.value-card');
            
            window.addEventListener('scroll', () => {
                const scrolled = window.pageYOffset;
                const rate = scrolled * -0.5;
                
                cards.forEach((card, index) => {
                    const yPos = -(rate / (index + 1));
                    if (Math.abs(yPos) < 100) {
                        card.style.transform = `translateY(${yPos}px)`;
                    }
                });
            });
        }

        // Réinitialiser les effets au redimensionnement
        window.addEventListener('resize', function() {
            if (window.innerWidth <= 768) {
                // Supprimer les transformations parallaxe sur mobile
                document.querySelectorAll('.value-card').forEach(card => {
                    card.style.transform = '';
                });
            }
        });

        // Gérer la fermeture des modals avec Escape
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                const modal = document.querySelector('.file-preview-modal');
                if (modal) {
                    modal.remove();
                }
            }
        });
    </script>
</body>
</html><!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Contenu du site - Administration</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.0/Sortable.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: #f8fafc;
            color: #1f2937;
        }

        .admin-layout {
            display: grid;
            grid-template-columns: 250px 1fr;
            min-height: 100vh;
        }

        .sidebar {
            background: linear-gradient(135deg, #1f2937, #111827);
            color: white;
            padding: 2rem 0;
        }

        .sidebar-header {
            text-align: center;
            padding: 0 1rem 2rem;
            border-bottom: 1px solid #374151;
            margin-bottom: 2rem;
        }

        .sidebar-header h2 {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
        }

        .sidebar-header p {
            font-size: 0.8rem;
            color: #9ca3af;
        }

        .sidebar-nav {
            list-style: none;
        }

        .sidebar-nav a {
            display: block;
            color: white;
            text-decoration: none;
            padding: 1rem 1.5rem;
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
        }

        .sidebar-nav a:hover, .sidebar-nav a.active {
            background: rgba(59, 130, 246, 0.1);
            border-left-color: #3b82f6;
        }

        .sidebar-nav i {
            margin-right: 0.75rem;
            width: 20px;
        }

        .main-content {
            padding: 2rem;
            max-height: 100vh;
            overflow-y: auto;
        }

        .page-header {
            margin-bottom: 2rem;
        }

        .page-header h1 {
            font-size: 2rem;
            color: #1f2937;
            margin-bottom: 0.5rem;
        }

        .breadcrumb {
            color: #6b7280;
            font-size: 0.9rem;
        }

        .tabs {
            display: flex;
            background: white;
            border-radius: 15px 15px 0 0;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            margin-bottom: 0;
            overflow-x: auto;
        }

        .tab-button {
            flex: 1;
            min-width: 150px;
            padding: 1rem 1.5rem;
            border: none;
            background: transparent;
            cursor: pointer;
            font-weight: 600;
            color: #6b7280;
            transition: all 0.3s ease;
            border-radius: 15px 15px 0 0;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            white-space: nowrap;
        }

        .tab-button.active {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
            color: white;
        }

        .tab-button:not(.active):hover {
            background: #f3f4f6;
            color: #374151;
        }

        .tab-content {
            display: none;
            background: white;
            border-radius: 0 0 15px 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            padding: 2rem;
        }

        .tab-content.active {
            display: block;
        }

        .form-grid {
            display: grid;
            gap: 1.5rem;
        }

        .form-section {
            background: #f8fafc;
            padding: 1.5rem;
            border-radius: 10px;
            border-left: 4px solid #3b82f6;
            position: relative;
        }

        .section-title {
            font-size: 1.2rem;
            color: #1f2937;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        .section-title-left {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .section-actions {
            display: flex;
            gap: 0.5rem;
        }

        .btn-mini {
            padding: 0.4rem 0.6rem;
            font-size: 0.8rem;
            border-radius: 6px;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group-inline {
            display: flex;
            gap: 1rem;
            align-items: end;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: #374151;
            margin-bottom: 0.5rem;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            background: white;
        }

        .form-control:focus {
            outline: none;
            border-color: #3b82f6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }

        .form-control-lg {
            padding: 1rem 1.25rem;
            font-size: 1.1rem;
        }

        .textarea-lg {
            min-height: 200px;
            resize: vertical;
        }

        .color-picker-group {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .color-preview {
            width: 50px;
            height: 50px;
            border-radius: 10px;
            border: 2px solid #e5e7eb;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.2rem;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            border-radius: 10px;
            font-weight: 600;
            text-decoration: none;
            border: none;
            cursor: pointer;
            font-size: 0.9rem;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #3b82f6, #1d4ed8);
            color: white;
        }

        .btn-success {
            background: linear-gradient(135deg, #10b981, #059669);
            color: white;
        }

        .btn-danger {
            background: linear-gradient(135deg, #ef4444, #b91c1c);
            color: white;
        }

        .btn-warning {
            background: linear-gradient(135deg, #f59e0b, #d97706);
            color: white;
        }

        .btn-outline {
            background: transparent;
            border: 2px solid #e5e7eb;
            color: #374151;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .alert-success {
            background: #d1fae5;
            color: #065f46;
            padding: 1rem;
            border-radius: 10px;
            margin-bottom: 2rem;
            border: 1px solid #bbf7d0;
        }

        .services-grid, .team-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 1.5rem;
        }

        .service-card, .team-card {
            background: white;
            border-radius: 15px;
            padding: 1.5rem;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
            border: 2px solid #f3f4f6;
            position: relative;
        }

        .card-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .service-icon {
            width: 60px;
            height: 60px;
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
        }

        .team-image {
            width: 100%;
            height: 200px;
            border-radius: 10px;
            object-fit: cover;
            margin-bottom: 1rem;
        }

        .image-preview {
            width: 100%;
            height: 200px;
            border-radius: 10px;
            object-fit: cover;
            margin-bottom: 1rem;
            display: none;
        }

        .image-preview.show {
            display: block;
        }

        .rich-editor {
            border: 2px solid #e5e7eb;
            border-radius: 10px;
            overflow: hidden;
        }

        .editor-toolbar {
            background: #f8fafc;
            padding: 0.5rem;
            border-bottom: 1px solid #e5e7eb;
            display: flex;
            gap: 0.5rem;
            flex-wrap: wrap;
        }

        .editor-btn {
            padding: 0.5rem;
            border: none;
            background: transparent;
            border-radius: 5px;
            cursor: pointer;
            transition: background 0.3s ease;
            font-size: 0.9rem;
        }

        .editor-btn:hover {
            background: #e5e7eb;
        }

        .editor-btn.active {
            background: #3b82f6;
            color: white;
        }

        .editor-content {
            min-height: 300px;
            padding: 1rem;
            outline: none;
            line-height: 1.6;
        }

        .editor-content:focus {
            background: #f9fafb;
        }

        .sortable-item {
            cursor: move;
        }

        .sortable-item:hover {
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        .drag-handle {
            position: absolute;
            top: 10px;
            right: 10px;
            background: #f3f4f6;
            border-radius: 8px;
            padding: 0.5rem;
            cursor: move;
            color: #6b7280;
            font-size: 1.2rem;
        }

        .content-manager {
            margin-bottom: 2rem;
            padding: 1.5rem;
            background: #f0f9ff;
            border-radius: 15px;
            border: 1px solid #bae6fd;
        }

        .content-item {
            background: white;
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 0.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border: 1px solid #e5e7eb;
        }

        .content-path {
            font-family: monospace;
            background: #f3f4f6;
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-size: 0.8rem;
        }

        .add-service-form, .add-team-form {
            background: #f0fdf4;
            border: 1px solid #bbf7d0;
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .form-row {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1rem;
        }

        .modal {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        .modal-content {
            background: white;
            border-radius: 15px;
            padding: 2rem;
            max-width: 500px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid #e5e7eb;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #6b7280;
        }

        .order-indicator {
            position: absolute;
            top: -10px;
            left: -10px;
            background: #3b82f6;
            color: white;
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 0.8rem;
        }

        @media (max-width: 768px) {
            .admin-layout {
                grid-template-columns: 1fr;
            }
            
            .sidebar {
                display: none;
            }
            
            .main-content {
                padding: 1rem;
            }
            
            .tabs {
                flex-direction: column;
            }
            
            .tab-button {
                border-radius: 0;
                min-width: auto;
            }
            
            .services-grid,
            .team-grid {
                grid-template-columns: 1fr;
            }

            .form-row {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="admin-layout">
        <aside class="sidebar">
            <div class="sidebar-header">
                <h2><?php echo SITE_NAME; ?></h2>
                <p>Administration</p>
            </div>
            <ul class="sidebar-nav">
                <li><a href="/admin/dashboard">
                    <i class="fas fa-chart-line"></i>
                    Tableau de bord
                </a></li>
                <li><a href="/admin/content" class="active">
                    <i class="fas fa-edit"></i>
                    Contenu du site
                </a></li>
                <li><a href="/admin/contacts">
                    <i class="fas fa-envelope"></i>
                    Messages
                </a></li>
                <li><a href="/admin/settings">
                    <i class="fas fa-cog"></i>
                    Paramètres
                </a></li>
                <li><a href="/" target="_blank">
                    <i class="fas fa-external-link-alt"></i>
                    Voir le site
                </a></li>
            </ul>
        </aside>

        <main class="main-content">
            <div class="page-header">
                <h1>Contenu du site</h1>
                <div class="breadcrumb">Administration / Contenu du site</div>
            </div>

            <?php if (!empty($success)): ?>
                <div class="alert-success">
                    <i class="fas fa-check-circle"></i>
                    <?php echo htmlspecialchars($success); ?>
                </div>
            <?php endif; ?>

            <div class="tabs">
                <button class="tab-button active" onclick="openTab(event, 'general')">
                    <i class="fas fa-home"></i>
                    Contenu général
                </button>
                <button class="tab-button" onclick="openTab(event, 'content-manager')">
                    <i class="fas fa-cogs"></i>
                    Gestionnaire
                </button>
                <button class="tab-button" onclick="openTab(event, 'services')">
                    <i class="fas fa-gavel"></i>
                    Services
                </button>
                <button class="tab-button" onclick="openTab(event, 'team')">
                    <i class="fas fa-users"></i>
                    Équipe
                </button>
                <button class="tab-button" onclick="openTab(event, 'news')">
                    <i class="fas fa-newspaper"></i>
                    Actualités
                </button>
            </div>

            <!-- Contenu général -->
            <div id="general" class="tab-content active">
                <form method="POST">
                    <input type="hidden" name="action" value="update_content">
                    
                    <div class="form-grid">
                        <div class="form-section">
                            <h3 class="section-title">
                                <span class="section-title-left">
                                    <i class="fas fa-star"></i>
                                    Section Hero (Accueil)
                                </span>
                            </h3>
                            <div class="form-group">
                                <label class="form-label">Titre principal</label>
                                <input type="text" name="content[hero][title]" class="form-control form-control-lg" 
                                       value="<?php echo htmlspecialchars($content['hero']['title'] ?? 'Excellence Juridique à Votre Service'); ?>">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Sous-titre</label>
                                <textarea name="content[hero][subtitle]" class="form-control" rows="3"><?php echo htmlspecialchars($content['hero']['subtitle'] ?? 'Depuis plus de 20 ans, nous accompagnons nos clients avec expertise, intégrité et dévouement dans tous leurs défis juridiques les plus complexes.'); ?></textarea>
                            </div>
                        </div>

                        <div class="form-section">
                            <h3 class="section-title">
                                <span class="section-title-left">
                                    <i class="fas fa-info-circle"></i>
                                    Section À propos
                                </span>
                            </h3>
                            <div class="form-group">
                                <label class="form-label">Titre</label>
                                <input type="text" name="content[about][title]" class="form-control" 
                                       value="<?php echo htmlspecialchars($content['about']['title'] ?? 'Votre Réussite, Notre Mission'); ?>">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Sous-titre</label>
                                <textarea name="content[about][subtitle]" class="form-control" rows="3"><?php echo htmlspecialchars($content['about']['subtitle'] ?? 'Fort d\'une expérience reconnue et d\'une approche personnalisée, notre cabinet vous offre un accompagnement juridique d\'excellence adapté à vos besoins spécifiques.'); ?></textarea>
                            </div>
                        </div>

                        <div class="form-section">
                            <h3 class="section-title">
                                <span class="section-title-left">
                                    <i class="fas fa-gavel"></i>
                                    Section Services
                                </span>
                            </h3>
                            <div class="form-group">
                                <label class="form-label">Titre</label>
                                <input type="text" name="content[services][title]" class="form-control" 
                                       value="<?php echo htmlspecialchars($content['services']['title'] ?? 'Domaines d\'Expertise'); ?>">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Sous-titre</label>
                                <textarea name="content[services][subtitle]" class="form-control" rows="3"><?php echo htmlspecialchars($content['services']['subtitle'] ?? 'Une expertise reconnue dans des domaines juridiques essentiels pour répondre à tous vos besoins'); ?></textarea>
                            </div>
                        </div>

                        <div class="form-section">
                            <h3 class="section-title">
                                <span class="section-title-left">
                                    <i class="fas fa-users"></i>
                                    Section Équipe
                                </span>
                            </h3>
                            <div class="form-group">
                                <label class="form-label">Titre</label>
                                <input type="text" name="content[team][title]" class="form-control" 
                                       value="<?php echo htmlspecialchars($content['team']['title'] ?? 'Des Experts à Vos Côtés'); ?>">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Sous-titre</label>
                                <textarea name="content[team][subtitle]" class="form-control" rows="3"><?php echo htmlspecialchars($content['team']['subtitle'] ?? 'Des avocats expérimentés et passionnés, reconnus pour leur expertise et leur engagement'); ?></textarea>
                            </div>
                        </div>
                    </div>

                    <div style="text-align: center; margin-top: 2rem;">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i>
                            Sauvegarder le contenu général
                        </button>
                    </div>
                </form>
            </div>

            <!-- Gestionnaire de contenu avancé -->
            <div id="content-manager" class="tab-content">
                <div class="content-manager">
                    <h3 style="margin-bottom: 1rem;">
                        <i class="fas fa-cogs"></i>
                        Gestionnaire de contenu avancé
                    </h3>
                    <p style="color: #6b7280; margin-bottom: 1.5rem;">
                        Gérez tous les éléments de contenu de votre site. Vous pouvez ajouter de nouvelles sections, modifier ou supprimer du contenu existant.
                    </p>

                    <!-- Formulaire d'ajout de contenu -->
                    <div style="background: white; padding: 1.5rem; border-radius: 10px; margin-bottom: 2rem;">
                        <h4 style="margin-bottom: 1rem;">
                            <i class="fas fa-plus"></i>
                            Ajouter du nouveau contenu
                        </h4>
                        <form method="POST">
                            <input type="hidden" name="action" value="add_content_section">
                            <div class="form-row">
                                <div class="form-group">
                                    <label class="form-label">Section</label>
                                    <select name="new_section" class="form-control" onchange="toggleCustomSection(this)">
                                        <option value="">Sélectionner une section</option>
                                        <option value="hero">Hero (Accueil)</option>
                                        <option value="about">À propos</option>
                                        <option value="services">Services</option>
                                        <option value="team">Équipe</option>
                                        <option value="contact">Contact</option>
                                        <option value="footer">Footer</option>
                                        <option value="custom">Nouvelle section personnalisée</option>
                                    </select>
                                </div>
                                <div class="form-group" id="customSectionGroup" style="display: none;">
                                    <label class="form-label">Nom de la section personnalisée</label>
                                    <input type="text" id="customSectionInput" class="form-control" placeholder="ex: testimonials, features">
                                </div>
                            </div>
                            <div class="form-row">
                                <div class="form-group">
                                    <label class="form-label">Clé</label>
                                    <input type="text" name="new_key" class="form-control" placeholder="ex: title, subtitle, description" required>
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Valeur</label>
                                    <textarea name="new_value" class="form-control" rows="3" placeholder="Contenu à afficher"></textarea>
                                </div>
                            </div>
                            <button type="submit" class="btn btn-success">
                                <i class="fas fa-plus"></i>
                                Ajouter ce contenu
                            </button>
                        </form>
                    </div>

                    <!-- Liste du contenu existant -->
                    <div style="background: white; padding: 1.5rem; border-radius: 10px;">
                        <h4 style="margin-bottom: 1rem;">
                            <i class="fas fa-list"></i>
                            Contenu existant
                        </h4>
                        
                        <?php if (!empty($content)): ?>
                            <?php foreach ($content as $section => $keys): ?>
                                <div style="margin-bottom: 1.5rem;">
                                    <h5 style="color: #3b82f6; margin-bottom: 0.5rem; display: flex; align-items: center; gap: 0.5rem;">
                                        <i class="fas fa-folder"></i>
                                        <?php echo ucfirst($section); ?>
                                    </h5>
                                    <?php foreach ($keys as $key => $value): ?>
                                        <div class="content-item">
                                            <div>
                                                <div class="content-path"><?php echo $section; ?>.<?php echo $key; ?></div>
                                                <div style="margin-top: 0.5rem; color: #6b7280; font-size: 0.9rem;">
                                                    <?php echo strlen($value) > 100 ? substr(htmlspecialchars($value), 0, 100) . '...' : htmlspecialchars($value); ?>
                                                </div>
                                            </div>
                                            <div style="display: flex; gap: 0.5rem;">
                                                <button type="button" class="btn btn-mini btn-outline" onclick="editContent('<?php echo $section; ?>', '<?php echo $key; ?>', '<?php echo htmlspecialchars($value, ENT_QUOTES); ?>')">
                                                    <i class="fas fa-edit"></i>
                                                    Modifier
                                                </button>
                                                <form method="POST" style="display: inline;" onsubmit="return confirm('Supprimer ce contenu ?');">
                                                    <input type="hidden" name="action" value="delete_content">
                                                    <input type="hidden" name="content_section" value="<?php echo $section; ?>">
                                                    <input type="hidden" name="content_key" value="<?php echo $key; ?>">
                                                    <button type="submit" class="btn btn-mini btn-danger">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </form>
                                            </div>
                                        </div>
                                    <?php endforeach; ?>
                                </div>
                            <?php endforeach; ?>
                        <?php else: ?>
                            <p style="color: #6b7280; text-align: center; padding: 2rem;">
                                Aucun contenu trouvé. Commencez par ajouter du nouveau contenu ci-dessus.
                            </p>
                        <?php endif; ?>
                    </div>
                </div>
            </div>

            <!-- Services -->
            <div id="services" class="tab-content">
                <!-- Formulaire d'ajout de service -->
                <div class="add-service-form">
                    <h3 style="margin-bottom: 1rem;">
                        <i class="fas fa-plus"></i>
                        Ajouter un nouveau service
                    </h3>
                    <form method="POST">
                        <input type="hidden" name="action" value="add_service">
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Titre du service *</label>
                                <input type="text" name="title" class="form-control" required placeholder="ex: Droit des Affaires">
                            </div>
                            <div class="form-group">
                                <label class="form-label">Icône (Font Awesome) *</label>
                                <input type="text" name="icon" class="form-control" value="fas fa-gavel" placeholder="fas fa-gavel">
                            </div>
                        </div>
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Couleur *</label>
                                <div class="color-picker-group">
                                    <input type="color" name="color" class="form-control" value="#3b82f6" onchange="updateAddColorPreview(this)">
                                    <div class="color-preview" id="add_color_preview" style="background: #3b82f6;">
                                        <i class="fas fa-gavel"></i>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Description courte *</label>
                                <textarea name="description" class="form-control" rows="3" required placeholder="Description qui apparaîtra sur la page d'accueil"></textarea>
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Contenu détaillé (pour la page dédiée)</label>
                            <div class="rich-editor">
                                <div class="editor-toolbar">
                                    <button type="button" class="editor-btn" onclick="formatText('bold')" title="Gras">
                                        <i class="fas fa-bold"></i>
                                    </button>
                                    <button type="button" class="editor-btn" onclick="formatText('italic')" title="Italique">
                                        <i class="fas fa-italic"></i>
                                    </button>
                                    <button type="button" class="editor-btn" onclick="insertList('ul')" title="Liste à puces">
                                        <i class="fas fa-list-ul"></i>
                                    </button>
                                    <button type="button" class="editor-btn" onclick="insertHeading()" title="Titre">
                                        <i class="fas fa-heading"></i>
                                    </button>
                                </div>
                                <div class="editor-content" contenteditable="true" id="newServiceContent">
                                    <h3>Notre approche</h3>
                                    <p>Nous privilégions une approche personnalisée et sur-mesure pour chaque client.</p>
                                    <ul>
                                        <li>Analyse approfondie de votre situation</li>
                                        <li>Conseil juridique adapté à vos besoins</li>
                                        <li>Accompagnement tout au long de la procédure</li>
                                    </ul>
                                </div>
                            </div>
                            <input type="hidden" name="detailed_content" id="new_detailed_content">
                        </div>
                        
                        <button type="submit" class="btn btn-success" onclick="saveNewServiceContent()">
                            <i class="fas fa-plus"></i>
                            Ajouter le service
                        </button>
                    </form>
                </div>

                <!-- Services existants -->
                <div style="display: flex; justify-content: between; align-items: center; margin-bottom: 1rem;">
                    <h3>Services existants</h3>
                    <div class="btn btn-outline" onclick="toggleReorderMode()">
                        <i class="fas fa-sort"></i>
                        Mode réorganisation
                    </div>
                </div>

                <div class="services-grid" id="servicesGrid">
                    <?php foreach ($services as $index => $service): ?>
                        <div class="service-card sortable-item" data-id="<?php echo $service['id']; ?>">
                            <div class="order-indicator"><?php echo $index + 1; ?></div>
                            <div class="drag-handle" style="display: none;">
                                <i class="fas fa-grip-vertical"></i>
                            </div>
                            
                            <form method="POST">
                                <input type="hidden" name="action" value="update_service">
                                <input type="hidden" name="service_id" value="<?php echo $service['id']; ?>">
                                
                                <div class="card-header">
                                    <div class="service-icon" style="background: <?php echo htmlspecialchars($service['color']); ?>;">
                                        <i class="<?php echo htmlspecialchars($service['icon']); ?>"></i>
                                    </div>
                                    <div style="flex: 1;">
                                        <h4><?php echo htmlspecialchars($service['title']); ?></h4>
                                        <small style="color: #6b7280;">ID: <?php echo $service['id']; ?></small>
                                    </div>
                                    <form method="POST" style="display: inline;" onsubmit="return confirm('Supprimer ce service ?');">
                                        <input type="hidden" name="action" value="delete_service">
                                        <input type="hidden" name="service_id" value="<?php echo $service['id']; ?>">
                                        <button type="submit" class="btn btn-mini btn-danger">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Titre du service</label>
                                    <input type="text" name="title" class="form-control" value="<?php echo htmlspecialchars($service['title']); ?>" required>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Description courte</label>
                                    <textarea name="description" class="form-control" rows="3" required><?php echo htmlspecialchars($service['description']); ?></textarea>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Contenu détaillé</label>
                                    <div class="rich-editor">
                                        <div class="editor-toolbar">
                                            <button type="button" class="editor-btn" onclick="formatText('bold')" title="Gras">
                                                <i class="fas fa-bold"></i>
                                            </button>
                                            <button type="button" class="editor-btn" onclick="formatText('italic')" title="Italique">
                                                <i class="fas fa-italic"></i>
                                            </button>
                                            <button type="button" class="editor-btn" onclick="insertList('ul')" title="Liste à puces">
                                                <i class="fas fa-list-ul"></i>
                                            </button>
                                            <button type="button" class="editor-btn" onclick="insertHeading()" title="Titre">
                                                <i class="fas fa-heading"></i>
                                            </button>
                                        </div>
                                        <div class="editor-content" contenteditable="true" data-service-id="<?php echo $service['id']; ?>">
                                            <?php echo !empty($service['detailed_content']) ? $service['detailed_content'] : 'Contenu détaillé à compléter...'; ?>
                                        </div>
                                    </div>
                                    <input type="hidden" name="detailed_content" id="detailed_content_<?php echo $service['id']; ?>">
                                </div>

                                <div class="form-row">
                                    <div class="form-group">
                                        <label class="form-label">Icône</label>
                                        <input type="text" name="icon" class="form-control" value="<?php echo htmlspecialchars($service['icon']); ?>" placeholder="fas fa-gavel">
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">Couleur</label>
                                        <div class="color-picker-group">
                                            <input type="color" name="color" class="form-control" value="<?php echo htmlspecialchars($service['color']); ?>" onchange="updateColorPreview(this, <?php echo $service['id']; ?>)">
                                            <div class="color-preview" id="color_preview_<?php echo $service['id']; ?>" style="background: <?php echo htmlspecialchars($service['color']); ?>;">
                                                <i class="<?php echo htmlspecialchars($service['icon']); ?>"></i>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <button type="submit" class="btn btn-success" onclick="saveServiceContent(<?php echo $service['id']; ?>)">
                                    <i class="fas fa-save"></i>
                                    Sauvegarder
                                </button>
                            </form>
                        </div>
                    <?php endforeach; ?>
                </div>
            </div>

            <!-- Équipe -->
            <div id="team" class="tab-content">
                <!-- Formulaire d'ajout de membre -->
                <div class="add-team-form">
                    <h3 style="margin-bottom: 1rem;">
                        <i class="fas fa-user-plus"></i>
                        Ajouter un nouveau membre
                    </h3>
                    <form method="POST" enctype="multipart/form-data">
                        <input type="hidden" name="action" value="add_team">
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Nom *</label>
                                <input type="text" name="name" class="form-control" required>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Poste *</label>
                                <input type="text" name="position" class="form-control" required>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Description *</label>
                            <textarea name="description" class="form-control textarea-lg" required></textarea>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Image du membre (JPG, PNG, GIF, max 5MB) *</label>
                            <input type="file" name="image" class="form-control" accept="image/jpeg,image/png,image/gif" required onchange="previewImage(this, 'new_team_preview')">
                            <img id="new_team_preview" class="image-preview" alt="Aperçu de l'image">
                        </div>
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-plus"></i>
                            Ajouter le membre
                        </button>
                    </form>
                </div>

                <!-- Équipe existante -->
                <div style="display: flex; justify-content: between; align-items: center; margin-bottom: 1rem;">
                    <h3>Équipe existante</h3>
                    <div class="btn btn-outline" onclick="toggleTeamReorderMode()">
                        <i class="fas fa-sort"></i>
                        Mode réorganisation
                    </div>
                </div>

                <div class="team-grid" id="teamGrid">
                    <?php foreach ($team as $index => $member): ?>
                        <div class="team-card sortable-item" data-id="<?php echo $member['id']; ?>">
                            <div class="order-indicator"><?php echo $index + 1; ?></div>
                            <div class="drag-handle" style="display: none;">
                                <i class="fas fa-grip-vertical"></i>
                            </div>
                            
                            <form method="POST" enctype="multipart/form-data">
                                <input type="hidden" name="action" value="update_team">
                                <input type="hidden" name="team_id" value="<?php echo $member['id']; ?>">
                                
                                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                                    <h4><?php echo htmlspecialchars($member['name']); ?></h4>
                                    <form method="POST" style="display: inline;" onsubmit="return confirm('Voulez-vous vraiment supprimer ce membre ?');">
                                        <input type="hidden" name="action" value="delete_team">
                                        <input type="hidden" name="team_id" value="<?php echo $member['id']; ?>">
                                        <button type="submit" class="btn btn-mini btn-danger">
                                            <i class="fas fa-trash"></i>
                                            Supprimer
                                        </button>
                                    </form>
                                </div>

                                <img src="<?php echo htmlspecialchars($member['image_path']); ?>" alt="<?php echo htmlspecialchars($member['name']); ?>" class="team-image">
                                <img id="preview_<?php echo $member['id']; ?>" class="image-preview" alt="Aperçu de la nouvelle image">

                                <div class="form-group">
                                    <label class="form-label">Nom</label>
                                    <input type="text" name="name" class="form-control" value="<?php echo htmlspecialchars($member['name']); ?>" required>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Poste</label>
                                    <input type="text" name="position" class="form-control" value="<?php echo htmlspecialchars($member['position']); ?>" required>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Description</label>
                                    <textarea name="description" class="form-control textarea-lg" required><?php echo htmlspecialchars($member['description']); ?></textarea>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Nouvelle image (optionnel, JPG, PNG, GIF, max 5MB)</label>
                                    <input type="file" name="image" class="form-control" accept="image/jpeg,image/png,image/gif" onchange="previewImage(this, 'preview_<?php echo $member['id']; ?>')">
                                </div>

                                <button type="submit" class="btn btn-success">
                                    <i class="fas fa-save"></i>
                                    Sauvegarder
                                </button>
                            </form>
                        </div>
                    <?php endforeach; ?>
                </div>
            </div>

            <!-- Actualités -->
            <div id="news" class="tab-content">
                <!-- Formulaire d'ajout d'actualité -->
                <div class="add-news-form" style="background: #f0fdf4; border: 1px solid #bbf7d0; border-radius: 15px; padding: 2rem; margin-bottom: 2rem;">
                    <h3 style="margin-bottom: 1rem;">
                        <i class="fas fa-plus"></i>
                        Ajouter une nouvelle actualité
                    </h3>
                    <form method="POST" enctype="multipart/form-data">
                        <input type="hidden" name="action" value="add_news">
                        
                        <div class="form-row">
                            <div class="form-group">
                                <label class="form-label">Titre *</label>
                                <input type="text" name="title" class="form-control" required>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Date de publication *</label>
                                <input type="date" name="publish_date" class="form-control" required value="<?php echo date('Y-m-d'); ?>">
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Contenu *</label>
                            <div class="rich-editor">
                                <div class="editor-toolbar">
                                    <button type="button" class="editor-btn" onclick="formatText('bold')" title="Gras">
                                        <i class="fas fa-bold"></i>
                                    </button>
                                    <button type="button" class="editor-btn" onclick="formatText('italic')" title="Italique">
                                        <i class="fas fa-italic"></i>
                                    </button>
                                    <button type="button" class="editor-btn" onclick="insertList('ul')" title="Liste à puces">
                                        <i class="fas fa-list-ul"></i>
                                    </button>
                                    <button type="button" class="editor-btn" onclick="insertHeading()" title="Titre">
                                        <i class="fas fa-heading"></i>
                                    </button>
                                </div>
                                <div class="editor-content" contenteditable="true" id="newNewsContent">
                                    <p>Entrez le contenu de l'actualité ici...</p>
                                </div>
                            </div>
                            <input type="hidden" name="content" id="new_news_content">
                        </div>
                        
                        <div class="form-group">
                            <label class="form-label">Image (optionnel, JPG, PNG, max 5MB)</label>
                            <input type="file" name="image" class="form-control" accept="image/jpeg,image/png" onchange="previewImage(this, 'new_news_preview')">
                            <img id="new_news_preview" class="image-preview" alt="Aperçu de l'image">
                        </div>
                        
                        <button type="submit" class="btn btn-success" onclick="saveNewNewsContent()">
                            <i class="fas fa-plus"></i>
                            Ajouter l'actualité
                        </button>
                    </form>
                </div>

                <!-- Actualités existantes -->
                <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 1rem;">
                    <h3>Actualités existantes</h3>
                    <div class="btn btn-outline" onclick="toggleNewsReorderMode()">
                        <i class="fas fa-sort"></i>
                        Mode réorganisation
                    </div>
                </div>

                <div class="news-grid services-grid" id="newsGrid">
                    <?php foreach ($news as $index => $item): ?>
                        <div class="news-card service-card sortable-item" data-id="<?php echo $item['id']; ?>">
                            <div class="order-indicator"><?php echo $index + 1; ?></div>
                            <div class="drag-handle" style="display: none;">
                                <i class="fas fa-grip-vertical"></i>
                            </div>
                            
                            <form method="POST" enctype="multipart/form-data">
                                <input type="hidden" name="action" value="update_news">
                                <input type="hidden" name="news_id" value="<?php echo $item['id']; ?>">
                                
                                <div class="card-header">
                                    <div style="flex: 1;">
                                        <h4><?php echo htmlspecialchars($item['title']); ?></h4>
                                        <small style="color: #6b7280;">Date: <?php echo date('d/m/Y', strtotime($item['publish_date'])); ?></small>
                                    </div>
                                    <form method="POST" style="display: inline;" onsubmit="return confirm('Supprimer cette actualité ?');">
                                        <input type="hidden" name="action" value="delete_news">
                                        <input type="hidden" name="news_id" value="<?php echo $item['id']; ?>">
                                        <button type="submit" class="btn btn-mini btn-danger">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </form>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Titre</label>
                                    <input type="text" name="title" class="form-control" value="<?php echo htmlspecialchars($item['title']); ?>" required>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Date de publication</label>
                                    <input type="date" name="publish_date" class="form-control" value="<?php echo $item['publish_date']; ?>" required>
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Contenu</label>
                                    <div class="rich-editor">
                                        <div class="editor-toolbar">
                                            <button type="button" class="editor-btn" onclick="formatText('bold')" title="Gras">
                                                <i class="fas fa-bold"></i>
                                            </button>
                                            <button type="button" class="editor-btn" onclick="formatText('italic')" title="Italique">
                                                <i class="fas fa-italic"></i>
                                            </button>
                                            <button type="button" class="editor-btn" onclick="insertList('ul')" title="Liste à puces">
                                                <i class="fas fa-list-ul"></i>
                                            </button>
                                            <button type="button" class="editor-btn" onclick="insertHeading()" title="Titre">
                                                <i class="fas fa-heading"></i>
                                            </button>
                                        </div>
                                        <div class="editor-content" contenteditable="true" data-news-id="<?php echo $item['id']; ?>">
                                            <?php echo $item['content']; ?>
                                        </div>
                                    </div>
                                    <input type="hidden" name="content" id="news_content_<?php echo $item['id']; ?>">
                                </div>

                                <div class="form-group">
                                    <label class="form-label">Image actuelle</label>
                                    <?php if ($item['image_path']): ?>
                                        <img src="<?php echo htmlspecialchars($item['image_path']); ?>" alt="Image actuelle" style="width: 100%; height: 200px; object-fit: cover; border-radius: 10px; margin-bottom: 1rem;">
                                    <?php endif; ?>
                                    <label class="form-label">Nouvelle image (optionnel)</label>
                                    <input type="file" name="image" class="form-control" accept="image/jpeg,image/png" onchange="previewImage(this, 'news_preview_<?php echo $item['id']; ?>')">
                                    <img id="news_preview_<?php echo $item['id']; ?>" class="image-preview" alt="Aperçu">
                                </div>

                                <button type="submit" class="btn btn-success" onclick="saveNewsContent(<?php echo $item['id']; ?>)">
                                    <i class="fas fa-save"></i>
                                    Sauvegarder
                                </button>
                            </form>
                        </div>
                    <?php endforeach; ?>
                </div>
            </div>
        </main>
    </div>

    <!-- Modal d'édition de contenu -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Modifier le contenu</h3>
                <button class="modal-close" onclick="closeEditModal()">&times;</button>
            </div>
            <form method="POST" id="editForm">
                <input type="hidden" name="action" value="update_content">
                <input type="hidden" id="editSection" name="content_section">
                <input type="hidden" id="editKey" name="content_key">
                
                <div class="form-group">
                    <label class="form-label">Section</label>
                    <input type="text" id="editSectionDisplay" class="form-control" disabled>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Clé</label>
                    <input type="text" id="editKeyDisplay" class="form-control" disabled>
                </div>
                
                <div class="form-group">
                    <label class="form-label">Valeur</label>
                    <textarea id="editValue" name="new_value" class="form-control textarea-lg" required></textarea>
                </div>
                
                <div style="display: flex; gap: 1rem; justify-content: flex-end;">
                    <button type="button" class="btn btn-outline" onclick="closeEditModal()">Annuler</button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i>
                        Sauvegarder
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.0/Sortable.min.js"></script>
    <script>
        // Variables globales
        let reorderMode = false;
        let teamReorderMode = false;
        let newsReorderMode = false;
        let servicesSortable = null;
        let teamSortable = null;
        let newsSortable = null;

        // Navigation par onglets
        function openTab(evt, tabName) {
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tab-content");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].classList.remove("active");
            }
            tablinks = document.getElementsByClassName("tab-button");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].classList.remove("active");
            }
            document.getElementById(tabName).classList.add("active");
            evt.currentTarget.classList.add("active");
        }

        // Gestionnaire de section personnalisée
        function toggleCustomSection(select) {
            const customGroup = document.getElementById('customSectionGroup');
            const customInput = document.getElementById('customSectionInput');
            
            if (select.value === 'custom') {
                customGroup.style.display = 'block';
                customInput.required = true;
                customInput.addEventListener('input', function() {
                    select.name = 'temp_section';
                    if (!document.querySelector('input[name="new_section"]')) {
                        const hiddenInput = document.createElement('input');
                        hiddenInput.type = 'hidden';
                        hiddenInput.name = 'new_section';
                        select.parentNode.appendChild(hiddenInput);
                    }
                    document.querySelector('input[name="new_section"]').value = this.value;
                });
            } else {
                customGroup.style.display = 'none';
                customInput.required = false;
                select.name = 'new_section';
                const hiddenInput = document.querySelector('input[name="new_section"]');
                if (hiddenInput && hiddenInput !== select) {
                    hiddenInput.remove();
                }
            }
        }

        // Modal d'édition
        function editContent(section, key, value) {
            document.getElementById('editSection').value = section;
            document.getElementById('editKey').value = key;
            document.getElementById('editSectionDisplay').value = section;
            document.getElementById('editKeyDisplay').value = key;
            document.getElementById('editValue').value = value;
            document.getElementById('editModal').style.display = 'flex';
        }

        function closeEditModal() {
            document.getElementById('editModal').style.display = 'none';
        }

        // Gestionnaire de soumission du formulaire d'édition
        document.getElementById('editForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData();
            formData.append('action', 'update_content');
            
            const section = document.getElementById('editSection').value;
            const key = document.getElementById('editKey').value;
            const value = document.getElementById('editValue').value;
            
            formData.append(`content[${section}][${key}]`, value);
            
            fetch(window.location.href, {
                method: 'POST',
                body: formData
            }).then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Erreur lors de la sauvegarde');
                }
            }).catch(error => {
                console.error('Error:', error);
                alert('Erreur lors de la sauvegarde');
            });
        });

        // Gestion des couleurs
        function updateColorPreview(input, serviceId) {
            const preview = document.getElementById('color_preview_' + serviceId);
            preview.style.background = input.value;
        }

        function updateAddColorPreview(input) {
            const preview = document.getElementById('add_color_preview');
            const iconInput = document.querySelector('input[name="icon"]');
            preview.style.background = input.value;
            if (iconInput) {
                preview.querySelector('i').className = iconInput.value;
            }
        }

        // Éditeur riche
        function formatText(command) {
            document.execCommand(command, false, null);
        }

        function insertList(type) {
            if (type === 'ul') {
                document.execCommand('insertUnorderedList', false, null);
            } else {
                document.execCommand('insertOrderedList', false, null);
            }
        }

        function insertHeading() {
            const selection = window.getSelection().toString();
            if (selection) {
                document.execCommand('formatBlock', false, 'h3');
            } else {
                document.execCommand('insertHTML', false, '<h3>Nouveau titre</h3><p></p>');
            }
        }

        function saveServiceContent(serviceId) {
            const editorContent = document.querySelector(`[data-service-id="${serviceId}"]`);
            const hiddenInput = document.getElementById(`detailed_content_${serviceId}`);
            if (editorContent && hiddenInput) {
                hiddenInput.value = editorContent.innerHTML;
            }
        }

        function saveNewServiceContent() {
            const editorContent = document.getElementById('newServiceContent');
            const hiddenInput = document.getElementById('new_detailed_content');
            if (editorContent && hiddenInput) {
                hiddenInput.value = editorContent.innerHTML;
            }
        }

        function saveNewsContent(newsId) {
            const editorContent = document.querySelector(`[data-news-id="${newsId}"]`);
            const hiddenInput = document.getElementById(`news_content_${newsId}`);
            if (editorContent && hiddenInput) {
                hiddenInput.value = editorContent.innerHTML;
            }
        }

        function saveNewNewsContent() {
            const editorContent = document.getElementById('newNewsContent');
            const hiddenInput = document.getElementById('new_news_content');
            if (editorContent && hiddenInput) {
                hiddenInput.value = editorContent.innerHTML;
            }
        }

        // Prévisualisation d'images
        function previewImage(input, previewId) {
            const preview = document.getElementById(previewId);
            if (input.files && input.files[0]) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    preview.classList.add('show');
                };
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.classList.remove('show');
            }
        }

        // Mode réorganisation des services
        function toggleReorderMode() {
            reorderMode = !reorderMode;
            const grid = document.getElementById('servicesGrid');
            const dragHandles = document.querySelectorAll('#servicesGrid .drag-handle');
            const orderIndicators = document.querySelectorAll('#servicesGrid .order-indicator');
            
            if (reorderMode) {
                // Activer le mode réorganisation
                grid.style.opacity = '0.8';
                dragHandles.forEach(handle => handle.style.display = 'block');
                orderIndicators.forEach(indicator => indicator.style.display = 'flex');
                
                // Initialiser Sortable
                servicesSortable = new Sortable(grid, {
                    animation: 150,
                    handle: '.drag-handle',
                    ghostClass: 'sortable-ghost',
                    onEnd: function(evt) {
                        updateServicesOrder();
                    }
                });
                
                // Changer le texte du bouton
                document.querySelector('[onclick="toggleReorderMode()"]').innerHTML = '<i class="fas fa-check"></i> Terminer la réorganisation';
            } else {
                // Désactiver le mode réorganisation
                grid.style.opacity = '1';
                dragHandles.forEach(handle => handle.style.display = 'none');
                
                if (servicesSortable) {
                    servicesSortable.destroy();
                    servicesSortable = null;
                }
                
                document.querySelector('[onclick="toggleReorderMode()"]').innerHTML = '<i class="fas fa-sort"></i> Mode réorganisation';
            }
        }

        // Mode réorganisation de l'équipe
        function toggleTeamReorderMode() {
            teamReorderMode = !teamReorderMode;
            const grid = document.getElementById('teamGrid');
            const dragHandles = document.querySelectorAll('#teamGrid .drag-handle');
            const orderIndicators = document.querySelectorAll('#teamGrid .order-indicator');
            
            if (teamReorderMode) {
                grid.style.opacity = '0.8';
                dragHandles.forEach(handle => handle.style.display = 'block');
                orderIndicators.forEach(indicator => indicator.style.display = 'flex');
                
                teamSortable = new Sortable(grid, {
                    animation: 150,
                    handle: '.drag-handle',
                    ghostClass: 'sortable-ghost',
                    onEnd: function(evt) {
                        updateTeamOrder();
                    }
                });
                
                document.querySelector('[onclick="toggleTeamReorderMode()"]').innerHTML = '<i class="fas fa-check"></i> Terminer la réorganisation';
            } else {
                grid.style.opacity = '1';
                dragHandles.forEach(handle => handle.style.display = 'none');
                
                if (teamSortable) {
                    teamSortable.destroy();
                    teamSortable = null;
                }
                
                document.querySelector('[onclick="toggleTeamReorderMode()"]').innerHTML = '<i class="fas fa-sort"></i> Mode réorganisation';
            }
        }

        // Mode réorganisation des actualités
        function toggleNewsReorderMode() {
            newsReorderMode = !newsReorderMode;
            const grid = document.getElementById('newsGrid');
            const dragHandles = document.querySelectorAll('#newsGrid .drag-handle');
            const orderIndicators = document.querySelectorAll('#newsGrid .order-indicator');
            
            if (newsReorderMode) {
                grid.style.opacity = '0.8';
                dragHandles.forEach(handle => handle.style.display = 'block');
                orderIndicators.forEach(indicator => indicator.style.display = 'flex');
                
                newsSortable = new Sortable(grid, {
                    animation: 150,
                    handle: '.drag-handle',
                    ghostClass: 'sortable-ghost',
                    onEnd: function(evt) {
                        updateNewsOrder();
                    }
                });
                
                document.querySelector('[onclick="toggleNewsReorderMode()"]').innerHTML = '<i class="fas fa-check"></i> Terminer la réorganisation';
            } else {
                grid.style.opacity = '1';
                dragHandles.forEach(handle => handle.style.display = 'none');
                
                if (newsSortable) {
                    newsSortable.destroy();
                    newsSortable = null;
                }
                
                document.querySelector('[onclick="toggleNewsReorderMode()"]').innerHTML = '<i class="fas fa-sort"></i> Mode réorganisation';
            }
        }

        // Mise à jour de l'ordre des services
        function updateServicesOrder() {
            const items = document.querySelectorAll('#servicesGrid .sortable-item');
            const orders = {};
            
            items.forEach((item, index) => {
                const id = item.dataset.id;
                orders[id] = index + 1;
                
                // Mettre à jour l'indicateur visuel
                const indicator = item.querySelector('.order-indicator');
                if (indicator) {
                    indicator.textContent = index + 1;
                }
            });
            
            // Envoyer la nouvelle ordre au serveur
            const formData = new FormData();
            formData.append('action', 'reorder_services');
            formData.append('orders', JSON.stringify(orders));
            
            fetch(window.location.href, {
                method: 'POST',
                body: formData
            }).then(response => {
                if (!response.ok) {
                    console.error('Erreur lors de la mise à jour de l\'ordre');
                }
            }).catch(error => {
                console.error('Error:', error);
            });
        }

        // Mise à jour de l'ordre de l'équipe
        function updateTeamOrder() {
            const items = document.querySelectorAll('#teamGrid .sortable-item');
            const orders = {};
            
            items.forEach((item, index) => {
                const id = item.dataset.id;
                orders[id] = index + 1;
                
                const indicator = item.querySelector('.order-indicator');
                if (indicator) {
                    indicator.textContent = index + 1;
                }
            });
            
            const formData = new FormData();
            formData.append('action', 'reorder_team');
            formData.append('orders', JSON.stringify(orders));
            
            fetch(window.location.href, {
                method: 'POST',
                body: formData
            }).then(response => {
                if (!response.ok) {
                    console.error('Erreur lors de la mise à jour de l\'ordre');
                }
            }).catch(error => {
                console.error('Error:', error);
            });
        }

        // Mise à jour de l'ordre des actualités
        function updateNewsOrder() {
            const items = document.querySelectorAll('#newsGrid .sortable-item');
            const orders = {};
            
            items.forEach((item, index) => {
                const id = item.dataset.id;
                orders[id] = index + 1;
                
                const indicator = item.querySelector('.order-indicator');
                if (indicator) {
                    indicator.textContent = index + 1;
                }
            });
            
            const formData = new FormData();
            formData.append('action', 'reorder_news');
            formData.append('orders', JSON.stringify(orders));
            
            fetch(window.location.href, {
                method: 'POST',
                body: formData
            }).then(response => {
                if (!response.ok) {
                    console.error('Erreur lors de la mise à jour de l\'ordre');
                }
            }).catch(error => {
                console.error('Error:', error);
            });
        }

        // Auto-sauvegarde des contenus éditeur
        let autoSaveTimeout;
        document.querySelectorAll('.editor-content').forEach(editor => {
            editor.addEventListener('input', function() {
                clearTimeout(autoSaveTimeout);
                const serviceId = this.dataset.serviceId;
                if (serviceId) {
                    autoSaveTimeout = setTimeout(() => {
                        // Stocker dans localStorage comme brouillon
                        localStorage.setItem(`service_draft_${serviceId}`, this.innerHTML);
                        console.log(`Brouillon sauvegardé pour le service ${serviceId}`);
                    }, 2000);
                }
            });
        });

        // Gestionnaire de soumission pour tous les formulaires
        document.querySelectorAll('form').forEach(form => {
            form.addEventListener('submit', function(e) {
                const editorContent = this.querySelector('.editor-content');
                if (editorContent) {
                    const serviceId = editorContent.dataset.serviceId;
                    const hiddenInput = this.querySelector(`input[name="detailed_content"]`);
                    if (hiddenInput) {
                        hiddenInput.value = editorContent.innerHTML;
                    }
                    
                    // Supprimer le brouillon après sauvegarde réussie
                    if (serviceId) {
                        localStorage.removeItem(`service_draft_${serviceId}`);
                    }
                }
                
                // Ajouter un indicateur de chargement
                const submitBtn = this.querySelector('button[type="submit"]');
                if (submitBtn && !submitBtn.disabled) {
                    const originalText = submitBtn.innerHTML;
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Sauvegarde...';
                    submitBtn.disabled = true;
                    
                    // Réactiver après un délai (au cas où la page ne se recharge pas)
                    setTimeout(() => {
                        submitBtn.innerHTML = originalText;
                        submitBtn.disabled = false;
                    }, 5000);
                }
            });
        });

        // Restauration des brouillons au chargement
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.editor-content').forEach(editor => {
                const serviceId = editor.dataset.serviceId;
                if (serviceId) {
                    const draft = localStorage.getItem(`service_draft_${serviceId}`);
                    if (draft && confirm(`Un brouillon a été trouvé pour ce service. Voulez-vous le restaurer ?`)) {
                        editor.innerHTML = draft;
                    }
                }
            });
            
            // Initialiser les prévisualisations de couleur
            document.querySelectorAll('input[type="color"]').forEach(input => {
                const serviceMatch = input.getAttribute('onchange');
                if (serviceMatch && serviceMatch.includes('updateColorPreview')) {
                    const serviceId = serviceMatch.match(/\d+/);
                    if (serviceId) {
                        updateColorPreview(input, serviceId[0]);
                    }
                }
            });
        });

        // Fermeture du modal avec Escape
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeEditModal();
            }
        });

        // Fermeture du modal en cliquant à l'extérieur
        document.getElementById('editModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeEditModal();
            }
        });

        // Mise à jour dynamique de l'icône dans l'aperçu
        document.addEventListener('input', function(e) {
            if (e.target.name === 'icon') {
                const form = e.target.closest('form');
                const colorPreview = form.querySelector('.color-preview i');
                if (colorPreview) {
                    colorPreview.className = e.target.value;
                }
            }
        });

        console.log('Interface d\'administration avancée chargée avec succès');
    </script>
</body>
</html><?php
// Inclure le fichier de configuration
require_once __DIR__ . '/config.php';

class Database {
    private $connection = null;
    
    public function getConnection() {
        if ($this->connection === null) {
            try {
                // Vérifier que la constante DB_NAME est définie
                if (!defined('DB_NAME')) {
                    throw new Exception('DB_NAME constant is not defined. Please check your config.php file.');
                }
                
                // Créer le répertoire de la base de données si nécessaire
                $dbDir = dirname(DB_NAME);
                if (!is_dir($dbDir)) {
                    if (!mkdir($dbDir, 0755, true)) {
                        throw new Exception('Cannot create database directory: ' . $dbDir);
                    }
                }
                
                // Connexion SQLite avec le chemin complet
                $this->connection = new PDO('sqlite:' . DB_NAME);
                $this->connection->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
                $this->connection->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);
                
                // Activer les clés étrangères pour SQLite
                $this->connection->exec('PRAGMA foreign_keys = ON;');
                
                // Optimisations SQLite
                $this->connection->exec('PRAGMA journal_mode = WAL;');
                $this->connection->exec('PRAGMA synchronous = NORMAL;');
                $this->connection->exec('PRAGMA cache_size = 10000;');
                $this->connection->exec('PRAGMA temp_store = MEMORY;');
                
                $this->initializeTables();
                
            } catch (PDOException $e) {
                error_log('Database PDO Error: ' . $e->getMessage());
                throw new Exception('Database connection failed: ' . $e->getMessage());
            } catch (Exception $e) {
                error_log('Database Error: ' . $e->getMessage());
                throw new Exception('Database error: ' . $e->getMessage());
            }
        }
        return $this->connection;
    }
    
    private function initializeTables() {
        try {
            // Commencer une transaction pour l'initialisation
            $this->connection->beginTransaction();
            
            $sql = "
            CREATE TABLE IF NOT EXISTS site_content (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                section VARCHAR(50) NOT NULL,
                key_name VARCHAR(100) NOT NULL,
                value TEXT NOT NULL,
                type VARCHAR(20) DEFAULT 'text',
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(section, key_name)
            );

            CREATE TABLE IF NOT EXISTS contacts (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name VARCHAR(255) NOT NULL,
                email VARCHAR(255) NOT NULL,
                phone VARCHAR(50),
                subject VARCHAR(255),
                message TEXT NOT NULL,
                status VARCHAR(20) DEFAULT 'new',
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            );

            CREATE TABLE IF NOT EXISTS services (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title VARCHAR(255) NOT NULL,
                description TEXT NOT NULL,
                icon VARCHAR(50) NOT NULL,
                color VARCHAR(7) DEFAULT '#3b82f6',
                order_position INTEGER DEFAULT 0,
                is_active INTEGER DEFAULT 1,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                detailed_content TEXT
            );

            CREATE TABLE IF NOT EXISTS team_members (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT NOT NULL,
                position TEXT NOT NULL,
                description TEXT NOT NULL,
                image_path TEXT NOT NULL,
                is_active INTEGER DEFAULT 1,
                order_position INTEGER DEFAULT 0,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            );

            CREATE TABLE IF NOT EXISTS news (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                title VARCHAR(255) NOT NULL,
                content TEXT NOT NULL,
                image_path VARCHAR(255),
                publish_date DATE NOT NULL,
                order_position INTEGER DEFAULT 0,
                is_active INTEGER DEFAULT 1,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            );

            CREATE TABLE IF NOT EXISTS admin_settings (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                setting_key VARCHAR(100) NOT NULL UNIQUE,
                setting_value TEXT NOT NULL,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            );
            
            CREATE TABLE IF NOT EXISTS contact_files (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                contact_id INTEGER NOT NULL,
                original_name VARCHAR(255) NOT NULL,
                file_name VARCHAR(255) NOT NULL,
                file_path VARCHAR(500) NOT NULL,
                file_size INTEGER NOT NULL,
                file_type VARCHAR(50) NOT NULL,
                uploaded_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (contact_id) REFERENCES contacts(id) ON DELETE CASCADE
            );

            CREATE TABLE IF NOT EXISTS admin_users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                username VARCHAR(100) NOT NULL UNIQUE,
                password VARCHAR(255) NOT NULL,
                email VARCHAR(255),
                is_active INTEGER DEFAULT 1,
                last_login DATETIME,
                created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                updated_at DATETIME DEFAULT CURRENT_TIMESTAMP
            );
            ";
            
            // Exécuter le SQL pour créer les tables
            $this->connection->exec($sql);
            
            // Créer les index pour optimiser les performances
            $this->createIndexes();
            
            // Vérifier et ajouter les colonnes manquantes
            $this->updateTables();
            
            // Insérer les données par défaut
            $this->insertDefaultData();
            
            // Valider la transaction
            $this->connection->commit();
            
        } catch (Exception $e) {
            // Annuler la transaction en cas d'erreur
            $this->connection->rollBack();
            error_log('Error initializing tables: ' . $e->getMessage());
            throw $e;
        }
    }
    
    private function createIndexes() {
        $indexes = [
            "CREATE INDEX IF NOT EXISTS idx_contact_files_contact_id ON contact_files(contact_id);",
            "CREATE INDEX IF NOT EXISTS idx_contacts_status ON contacts(status);",
            "CREATE INDEX IF NOT EXISTS idx_contacts_created_at ON contacts(created_at);",
            "CREATE INDEX IF NOT EXISTS idx_contacts_email ON contacts(email);",
            "CREATE INDEX IF NOT EXISTS idx_site_content_section ON site_content(section);",
            "CREATE INDEX IF NOT EXISTS idx_site_content_key ON site_content(section, key_name);",
            "CREATE INDEX IF NOT EXISTS idx_services_active ON services(is_active, order_position);",
            "CREATE INDEX IF NOT EXISTS idx_team_members_active ON team_members(is_active, order_position);",
            "CREATE INDEX IF NOT EXISTS idx_news_active ON news(is_active, order_position, publish_date);",
            "CREATE INDEX IF NOT EXISTS idx_admin_settings_key ON admin_settings(setting_key);"
        ];
        
        foreach ($indexes as $index) {
            try {
                $this->connection->exec($index);
            } catch (PDOException $e) {
                // Ignorer les erreurs d'index déjà existants
                if (strpos($e->getMessage(), 'already exists') === false) {
                    error_log('Error creating index: ' . $e->getMessage());
                }
            }
        }
    }
    
    private function updateTables() {
        // Vérifier et ajouter la colonne detailed_content à services
        try {
            $checkColumn = $this->connection->query("PRAGMA table_info(services)")->fetchAll(PDO::FETCH_COLUMN, 1);
            if (!in_array('detailed_content', $checkColumn)) {
                $this->connection->exec("ALTER TABLE services ADD COLUMN detailed_content TEXT;");
            }
        } catch (PDOException $e) {
            error_log('Error updating services table: ' . $e->getMessage());
        }
    }
    
    private function insertDefaultData() {
        try {
            // Vérifier si des données existent déjà
            $check = $this->connection->query("SELECT COUNT(*) FROM site_content")->fetchColumn();
            if ($check > 0) return;
            
            // Insérer le contenu par défaut
            $this->insertDefaultSiteContent();
            $this->insertDefaultServices();
            $this->insertDefaultTeam();
            $this->insertDefaultAdmin();
            
        } catch (PDOException $e) {
            error_log('Error inserting default data: ' . $e->getMessage());
            throw $e;
        }
    }
    
    private function insertDefaultSiteContent() {
        $defaultContent = [
            ['hero', 'title', SITE_NAME],
            ['hero', 'subtitle', 'Votre partenaire de confiance pour tous vos besoins juridiques'],
            ['hero', 'cta_text', 'Prendre rendez-vous'],
            ['about', 'title', 'À propos de nous'],
            ['about', 'description', 'Fort de plus de 20 ans d\'expérience, notre cabinet vous accompagne dans tous vos besoins juridiques avec professionnalisme et rigueur.'],
            ['services', 'title', 'Nos services'],
            ['team', 'title', 'Notre équipe'],
            ['contact', 'title', 'Contactez-nous'],
            ['contact', 'address', '123 Avenue de la Justice, 75001 Paris'],
            ['contact', 'phone', '+33 1 23 45 67 89'],
            ['contact', 'email', ADMIN_EMAIL],
            ['footer', 'copyright', '© 2025 ' . SITE_NAME . '. Tous droits réservés.']
        ];
        
        $sql = "INSERT INTO site_content (section, key_name, value) VALUES (?, ?, ?)";
        $stmt = $this->connection->prepare($sql);
        
        foreach ($defaultContent as $content) {
            $stmt->execute($content);
        }
    }
    
    private function insertDefaultServices() {
        $check = $this->connection->query("SELECT COUNT(*) FROM services")->fetchColumn();
        if ($check > 0) return;
        
        $defaultServices = [
            [
                'title' => 'Droit des Affaires',
                'description' => 'Accompagnement juridique complet pour les entreprises, de la création aux opérations complexes.',
                'icon' => 'fas fa-briefcase',
                'color' => '#3b82f6',
                'order_position' => 1,
                'detailed_content' => 'Notre expertise en droit des affaires couvre tous les aspects juridiques de la vie d\'entreprise : création, structuration, développement et opérations complexes.'
            ],
            [
                'title' => 'Droit de la Famille',
                'description' => 'Conseil et représentation dans tous les aspects du droit familial et matrimonial.',
                'icon' => 'fas fa-heart',
                'color' => '#ef4444',
                'order_position' => 2,
                'detailed_content' => 'Nous vous accompagnons avec sensibilité et professionnalisme dans toutes les démarches liées au droit de la famille.'
            ],
            [
                'title' => 'Droit Immobilier',
                'description' => 'Expertise en transactions immobilières, copropriété et contentieux immobiliers.',
                'icon' => 'fas fa-home',
                'color' => '#10b981',
                'order_position' => 3,
                'detailed_content' => 'Spécialistes en droit immobilier, nous vous assistons dans vos projets d\'acquisition, vente et gestion immobilière.'
            ],
            [
                'title' => 'Droit du Travail',
                'description' => 'Protection des droits des salariés et conseil aux employeurs en droit social.',
                'icon' => 'fas fa-users',
                'color' => '#f59e0b',
                'order_position' => 4,
                'detailed_content' => 'Notre expertise en droit du travail vous garantit une défense efficace de vos droits et une conformité réglementaire.'
            ]
        ];
        
        $sql = "INSERT INTO services (title, description, icon, color, order_position, detailed_content) VALUES (?, ?, ?, ?, ?, ?)";
        $stmt = $this->connection->prepare($sql);
        
        foreach ($defaultServices as $service) {
            $stmt->execute([
                $service['title'],
                $service['description'],
                $service['icon'],
                $service['color'],
                $service['order_position'],
                $service['detailed_content']
            ]);
        }
    }
    
    private function insertDefaultTeam() {
        $check = $this->connection->query("SELECT COUNT(*) FROM team_members")->fetchColumn();
        if ($check > 0) return;
        
        $defaultTeam = [
            [
                'name' => 'Maître Jean Dupont',
                'position' => 'Avocat Associé - Droit des Affaires',
                'description' => 'Spécialisé en droit des sociétés et fusions-acquisitions, Maître Dupont accompagne les entreprises depuis plus de 15 ans.',
                'image_path' => '/public/uploads/team/avocat4.jpg',
                'order_position' => 1
            ],
            [
                'name' => 'Maître Marie Martin',
                'position' => 'Avocate Spécialisée - Droit de la Famille',
                'description' => 'Experte en droit matrimonial et protection de l\'enfance, Maître Martin défend les intérêts familiaux avec passion.',
                'image_path' => '/public/uploads/team/avocat5.jpg',
                'order_position' => 2
            ]
        ];
        
        $sql = "INSERT INTO team_members (name, position, description, image_path, is_active, order_position) VALUES (?, ?, ?, ?, 1, ?)";
        $stmt = $this->connection->prepare($sql);
        
        foreach ($defaultTeam as $member) {
            $stmt->execute([
                $member['name'],
                $member['position'],
                $member['description'],
                $member['image_path'],
                $member['order_position']
            ]);
        }
    }
    
    private function insertDefaultAdmin() {
        $check = $this->connection->query("SELECT COUNT(*) FROM admin_users")->fetchColumn();
        if ($check > 0) return;
        
        $sql = "INSERT INTO admin_users (username, password, email, is_active) VALUES (?, ?, ?, 1)";
        $stmt = $this->connection->prepare($sql);
        $stmt->execute([
            ADMIN_USERNAME,
            ADMIN_PASSWORD,
            ADMIN_EMAIL
        ]);
    }
    
    public function closeConnection() {
        $this->connection = null;
    }
    
    // Méthode utilitaire pour obtenir la taille de la base de données
    public function getDatabaseSize() {
        if (file_exists(DB_NAME)) {
            return filesize(DB_NAME);
        }
        return 0;
    }
    
    // Méthode pour optimiser la base de données
    public function optimizeDatabase() {
        try {
            $this->connection->exec('VACUUM;');
            $this->connection->exec('ANALYZE;');
            return true;
        } catch (PDOException $e) {
            error_log('Error optimizing database: ' . $e->getMessage());
            return false;
        }
    }
}
?><?php
require_once 'includes/Database.php';

class AdminController {
    private $db;
    
    public function __construct() {
        $database = new Database();
        $this->db = $database->getConnection();
    }
    
    public function login() {
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $username = $_POST['username'] ?? '';
            $password = $_POST['password'] ?? '';
            
            if ($username === ADMIN_USERNAME && password_verify($password, ADMIN_PASSWORD)) {
                $_SESSION['admin_logged_in'] = true;
                header('Location: /admin/dashboard');
                exit;
            } else {
                $error = 'Identifiants incorrects';
            }
        }
        
        if (isset($_SESSION['admin_logged_in']) && $_SESSION['admin_logged_in']) {
            header('Location: /admin/dashboard');
            exit;
        }
        
        include 'views/admin/login.php';
    }
    
    public function dashboard() {
        $this->requireAuth();
        
        $stats = [
            'contacts' => $this->db->query("SELECT COUNT(*) FROM contacts")->fetchColumn(),
            'new_contacts' => $this->db->query("SELECT COUNT(*) FROM contacts WHERE status = 'new'")->fetchColumn(),
            'services' => $this->db->query("SELECT COUNT(*) FROM services WHERE is_active = 1")->fetchColumn(),
            'team_members' => $this->db->query("SELECT COUNT(*) FROM team_members WHERE is_active = 1")->fetchColumn()
        ];
        
        $recent_contacts = $this->db->query("
            SELECT * FROM contacts 
            ORDER BY created_at DESC 
            LIMIT 5
        ")->fetchAll(PDO::FETCH_ASSOC);
        
        include 'views/admin/dashboard.php';
    }
    
    public function content() {
        $this->requireAuth();
        
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $action = $_POST['action'] ?? '';
            
            if ($action === 'update_content') {
                foreach ($_POST['content'] as $section => $keys) {
                    foreach ($keys as $key => $value) {
                        $stmt = $this->db->prepare("
                            INSERT OR REPLACE INTO site_content (section, key_name, value, updated_at) 
                            VALUES (?, ?, ?, datetime('now'))
                        ");
                        $stmt->execute([$section, $key, $value]);
                    }
                }
                $success = 'Contenu mis à jour avec succès!';
            } 
            elseif ($action === 'add_content_section') {
                $section = $_POST['new_section'] ?? '';
                $key = $_POST['new_key'] ?? '';
                $value = $_POST['new_value'] ?? '';
                
                if ($section && $key) {
                    $stmt = $this->db->prepare("
                        INSERT INTO site_content (section, key_name, value, updated_at) 
                        VALUES (?, ?, ?, datetime('now'))
                    ");
                    $stmt->execute([$section, $key, $value]);
                    $success = 'Nouveau contenu ajouté avec succès!';
                } else {
                    $success = 'Erreur : Section et clé sont requis.';
                }
            }
            elseif ($action === 'delete_content') {
                $section = $_POST['content_section'] ?? '';
                $key = $_POST['content_key'] ?? '';
                
                if ($section && $key) {
                    $stmt = $this->db->prepare("DELETE FROM site_content WHERE section = ? AND key_name = ?");
                    $stmt->execute([$section, $key]);
                    $success = 'Contenu supprimé avec succès!';
                }
            }
            elseif ($action === 'add_service') {
                $title = $_POST['title'] ?? '';
                $description = $_POST['description'] ?? '';
                $icon = $_POST['icon'] ?? 'fas fa-gavel';
                $color = $_POST['color'] ?? '#3b82f6';
                $detailed_content = $_POST['detailed_content'] ?? '';
                
                if ($title && $description) {
                    // Obtenir le prochain order_position
                    $stmt = $this->db->query("SELECT COALESCE(MAX(order_position), 0) + 1 as next_position FROM services");
                    $next_position = $stmt->fetchColumn();
                    
                    $stmt = $this->db->prepare("
                        INSERT INTO services (title, description, icon, color, detailed_content, is_active, order_position, created_at, updated_at)
                        VALUES (?, ?, ?, ?, ?, 1, ?, datetime('now'), datetime('now'))
                    ");
                    $stmt->execute([$title, $description, $icon, $color, $detailed_content, $next_position]);
                    $success = 'Service ajouté avec succès!';
                } else {
                    $success = 'Erreur : Titre et description sont requis.';
                }
            }
            elseif ($action === 'update_service') {
                $id = $_POST['service_id'];
                $title = $_POST['title'];
                $description = $_POST['description'];
                $icon = $_POST['icon'];
                $color = $_POST['color'];
                $detailed_content = $_POST['detailed_content'];
                
                $stmt = $this->db->prepare("
                    UPDATE services 
                    SET title = ?, description = ?, icon = ?, color = ?, detailed_content = ?, updated_at = datetime('now')
                    WHERE id = ?
                ");
                $stmt->execute([$title, $description, $icon, $color, $detailed_content, $id]);
                $success = 'Service mis à jour avec succès!';
            }
            elseif ($action === 'delete_service') {
                $id = $_POST['service_id'] ?? '';
                if ($id) {
                    $stmt = $this->db->prepare("DELETE FROM services WHERE id = ?");
                    $stmt->execute([$id]);
                    $success = 'Service supprimé avec succès!';
                } else {
                    $success = 'Erreur : ID du service manquant.';
                }
            }
            elseif ($action === 'reorder_services') {
                $orders = json_decode($_POST['orders'], true);
                if ($orders) {
                    foreach ($orders as $id => $position) {
                        $stmt = $this->db->prepare("UPDATE services SET order_position = ? WHERE id = ?");
                        $stmt->execute([$position, $id]);
                    }
                    $success = 'Ordre des services mis à jour avec succès!';
                }
            }
            elseif ($action === 'update_team') {
                $id = $_POST['team_id'];
                $name = $_POST['name'];
                $position = $_POST['position'];
                $description = $_POST['description'];
                
                $image_path = $this->handleImageUpload($_FILES['image'], $id, 'team');
                if (is_string($image_path) && strpos($image_path, 'Erreur') === 0) {
                    $success = $image_path;
                } else {
                    $stmt = $this->db->prepare("
                        UPDATE team_members 
                        SET name = ?, position = ?, description = ?, image_path = ?, updated_at = datetime('now')
                        WHERE id = ?
                    ");
                    $stmt->execute([$name, $position, $description, $image_path, $id]);
                    $success = 'Membre de l\'équipe mis à jour avec succès!';
                }
            } 
            elseif ($action === 'add_team') {
                $name = $_POST['name'] ?? '';
                $position = $_POST['position'] ?? '';
                $description = $_POST['description'] ?? '';
                
                if ($name && $position && $description && isset($_FILES['image']) && $_FILES['image']['size'] > 0) {
                    $image_path = $this->handleImageUpload($_FILES['image'], null, 'team');
                    if (is_string($image_path) && strpos($image_path, 'Erreur') === 0) {
                        $success = $image_path;
                    } else {
                        $stmt = $this->db->prepare("
                            INSERT INTO team_members (name, position, description, image_path, is_active, order_position, created_at, updated_at)
                            VALUES (?, ?, ?, ?, 1, (SELECT COALESCE(MAX(order_position), 0) + 1 FROM team_members), datetime('now'), datetime('now'))
                        ");
                        $stmt->execute([$name, $position, $description, $image_path]);
                        $success = 'Membre de l\'équipe ajouté avec succès!';
                    }
                } else {
                    $success = 'Erreur : Tous les champs, y compris l\'image, sont requis pour ajouter un membre.';
                }
            } 
            elseif ($action === 'delete_team') {
                $id = $_POST['team_id'] ?? '';
                if ($id) {
                    // Supprimer l'image associée
                    $stmt = $this->db->prepare("SELECT image_path FROM team_members WHERE id = ?");
                    $stmt->execute([$id]);
                    $image_path = $stmt->fetchColumn();
                    if ($image_path && file_exists($_SERVER['DOCUMENT_ROOT'] . $image_path)) {
                        unlink($_SERVER['DOCUMENT_ROOT'] . $image_path);
                    }
                    
                    $stmt = $this->db->prepare("DELETE FROM team_members WHERE id = ?");
                    $stmt->execute([$id]);
                    $success = 'Membre de l\'équipe supprimé avec succès!';
                } else {
                    $success = 'Erreur : ID du membre manquant.';
                }
            }
            elseif ($action === 'reorder_team') {
                $orders = json_decode($_POST['orders'], true);
                if ($orders) {
                    foreach ($orders as $id => $position) {
                        $stmt = $this->db->prepare("UPDATE team_members SET order_position = ? WHERE id = ?");
                        $stmt->execute([$position, $id]);
                    }
                    $success = 'Ordre de l\'équipe mis à jour avec succès!';
                }
            }
            elseif ($action === 'add_news') {
                $title = $_POST['title'] ?? '';
                $content = $_POST['content'] ?? '';
                $publish_date = $_POST['publish_date'] ?? '';
                
                if ($title && $content && $publish_date) {
                    $image_path = $this->handleImageUpload($_FILES['image'], null, 'news');
                    if (is_string($image_path) && strpos($image_path, 'Erreur') === 0) {
                        $image_path = null; // Optionnel, continuer sans image si erreur
                    }
                    
                    $stmt = $this->db->query("SELECT COALESCE(MAX(order_position), 0) + 1 as next_position FROM news");
                    $next_position = $stmt->fetchColumn();
                    
                    $stmt = $this->db->prepare("
                        INSERT INTO news (title, content, image_path, publish_date, order_position, is_active, created_at, updated_at)
                        VALUES (?, ?, ?, ?, ?, 1, datetime('now'), datetime('now'))
                    ");
                    $stmt->execute([$title, $content, $image_path, $publish_date, $next_position]);
                    $success = 'Actualité ajoutée avec succès!';
                } else {
                    $success = 'Erreur : Titre, contenu et date sont requis.';
                }
            }
            elseif ($action === 'update_news') {
                $id = $_POST['news_id'] ?? '';
                $title = $_POST['title'] ?? '';
                $content = $_POST['content'] ?? '';
                $publish_date = $_POST['publish_date'] ?? '';
                
                if ($id && $title && $content && $publish_date) {
                    $image_path = $this->handleImageUpload($_FILES['image'], $id, 'news');
                    if (is_string($image_path) && strpos($image_path, 'Erreur') === 0) {
                        $image_path = $this->db->prepare("SELECT image_path FROM news WHERE id = ?")->execute([$id])->fetchColumn();
                    }
                    
                    $stmt = $this->db->prepare("
                        UPDATE news 
                        SET title = ?, content = ?, image_path = ?, publish_date = ?, updated_at = datetime('now')
                        WHERE id = ?
                    ");
                    $stmt->execute([$title, $content, $image_path, $publish_date, $id]);
                    $success = 'Actualité mise à jour avec succès!';
                } else {
                    $success = 'Erreur : Champs requis manquants.';
                }
            }
            elseif ($action === 'delete_news') {
                $id = $_POST['news_id'] ?? '';
                if ($id) {
                    // Supprimer l'image si existe
                    $stmt = $this->db->prepare("SELECT image_path FROM news WHERE id = ?");
                    $stmt->execute([$id]);
                    $image_path = $stmt->fetchColumn();
                    if ($image_path && file_exists($_SERVER['DOCUMENT_ROOT'] . $image_path)) {
                        unlink($_SERVER['DOCUMENT_ROOT'] . $image_path);
                    }
                    
                    $stmt = $this->db->prepare("DELETE FROM news WHERE id = ?");
                    $stmt->execute([$id]);
                    $success = 'Actualité supprimée avec succès!';
                } else {
                    $success = 'Erreur : ID manquant.';
                }
            }
            elseif ($action === 'reorder_news') {
                $orders = json_decode($_POST['orders'], true);
                if ($orders) {
                    foreach ($orders as $id => $position) {
                        $stmt = $this->db->prepare("UPDATE news SET order_position = ? WHERE id = ?");
                        $stmt->execute([$position, $id]);
                    }
                    $success = 'Ordre des actualités mis à jour avec succès!';
                }
            }
        }
        
        // Charger le contenu
        $stmt = $this->db->query("SELECT section, key_name, value FROM site_content ORDER BY section, key_name");
        $content = [];
        while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
            $content[$row['section']][$row['key_name']] = $row['value'];
        }
        
        // Charger toutes les sections uniques pour la gestion
        $stmt = $this->db->query("SELECT DISTINCT section FROM site_content ORDER BY section");
        $sections = $stmt->fetchAll(PDO::FETCH_COLUMN);
        
        $services = $this->db->query("SELECT * FROM services ORDER BY order_position")->fetchAll(PDO::FETCH_ASSOC);
        $team = $this->db->query("SELECT * FROM team_members ORDER BY order_position")->fetchAll(PDO::FETCH_ASSOC);
        $news = $this->db->query("SELECT * FROM news ORDER BY order_position")->fetchAll(PDO::FETCH_ASSOC);
        
        include 'views/admin/content.php';
    }
    
    private function handleImageUpload($file, $existing_id = null, $type = 'team') {
        $upload_dir = $_SERVER['DOCUMENT_ROOT'] . "/public/uploads/$type/";
        
        // Créer le dossier si nécessaire
        if (!is_dir($upload_dir)) {
            mkdir($upload_dir, 0755, true);
        }
        
        if ($file['error'] === UPLOAD_ERR_NO_FILE) {
            if ($existing_id) {
                // Récupérer le chemin existant
                $table = $type === 'news' ? 'news' : 'team_members';
                $stmt = $this->db->prepare("SELECT image_path FROM $table WHERE id = ?");
                $stmt->execute([$existing_id]);
                return $stmt->fetchColumn();
            }
            return null; // Pas d'erreur si optionnel
        }
        
        $allowed_types = ['image/jpeg', 'image/png', 'image/gif'];
        $max_size = 5 * 1024 * 1024; // 5MB
        
        if (!in_array($file['type'], $allowed_types)) {
            return 'Erreur : Type de fichier non autorisé. Seuls JPG, PNG et GIF sont acceptés.';
        }
        
        if ($file['size'] > $max_size) {
            return 'Erreur : Le fichier est trop volumineux. Taille maximale : 5MB.';
        }
        
        $extension = pathinfo($file['name'], PATHINFO_EXTENSION);
        $filename = uniqid($type . '_') . '.' . $extension;
        $destination = $upload_dir . $filename;
        $relative_path = "/public/uploads/$type/" . $filename;
        
        if (move_uploaded_file($file['tmp_name'], $destination)) {
            // Supprimer l'ancienne image si mise à jour
            if ($existing_id) {
                $table = $type === 'news' ? 'news' : 'team_members';
                $stmt = $this->db->prepare("SELECT image_path FROM $table WHERE id = ?");
                $stmt->execute([$existing_id]);
                $old_image = $stmt->fetchColumn();
                if ($old_image && file_exists($_SERVER['DOCUMENT_ROOT'] . $old_image)) {
                    unlink($_SERVER['DOCUMENT_ROOT'] . $old_image);
                }
            }
            return $relative_path;
        }
        
        return 'Erreur : Échec de l\'upload du fichier.';
    }
    
    public function contacts() {
        $this->requireAuth();
        
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $action = $_POST['action'] ?? '';
            $id = $_POST['id'] ?? '';
            
            if ($action === 'mark_read' && $id) {
                $stmt = $this->db->prepare("UPDATE contacts SET status = 'read', updated_at = datetime('now') WHERE id = ?");
                $stmt->execute([$id]);
                $success = 'Message marqué comme lu';
            } elseif ($action === 'mark_new' && $id) {
                $stmt = $this->db->prepare("UPDATE contacts SET status = 'new', updated_at = datetime('now') WHERE id = ?");
                $stmt->execute([$id]);
                $success = 'Message marqué comme nouveau';
            } elseif ($action === 'delete' && $id) {
                $stmt = $this->db->prepare("DELETE FROM contacts WHERE id = ?");
                $stmt->execute([$id]);
                $success = 'Message supprimé';
            }
        }
        
        $contacts = $this->db->query("
            SELECT * FROM contacts 
            ORDER BY created_at DESC
        ")->fetchAll(PDO::FETCH_ASSOC);
        
        include 'views/admin/contacts.php';
    }
    
    public function messageDetail() {
        $this->requireAuth();
        
        $url = $_SERVER['REQUEST_URI'];
        $parts = explode('/', $url);
        $messageId = end($parts);
        
        if (!is_numeric($messageId)) {
            header('Location: /admin/contacts');
            exit;
        }
        
        $stmt = $this->db->prepare("SELECT * FROM contacts WHERE id = ?");
        $stmt->execute([$messageId]);
        $contact = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if (!$contact) {
            header('Location: /admin/contacts');
            exit;
        }
        
        $updateStmt = $this->db->prepare("UPDATE contacts SET status = 'read', updated_at = datetime('now') WHERE id = ?");
        $updateStmt->execute([$messageId]);
        
        $filesStmt = $this->db->prepare("SELECT * FROM contact_files WHERE contact_id = ? ORDER BY uploaded_at");
        $filesStmt->execute([$messageId]);
        $files = $filesStmt->fetchAll(PDO::FETCH_ASSOC);
        
        include 'views/admin/message-detail.php';
    }
    
    public function settings() {
        $this->requireAuth();
        
        if ($_SERVER['REQUEST_METHOD'] === 'POST') {
            $success = 'Paramètres mis à jour!';
        }
        
        include 'views/admin/settings.php';
    }
    
    public function logout() {
        session_destroy();
        header('Location: /admin');
        exit;
    }
    
    private function requireAuth() {
        if (!isset($_SESSION['admin_logged_in']) || !$_SESSION['admin_logged_in']) {
            header('Location: /admin');
            exit;
        }
    }
}
?><?php
require_once 'includes/Database.php';

class HomeController {
    private $db;
    
    public function __construct() {
        $database = new Database();
        $this->db = $database->getConnection();
        
        // Vérifier et initialiser les données si nécessaire
        $this->ensureDefaultData();
    }
    
    public function index() {
        try {
            // Get content
            $content = $this->getContent();
            $services = $this->getServices();
            $team = $this->getTeam();
            $news = $this->getNews();
            
            // Debug : vérifier si on a des données
            error_log("HomeController - Content count: " . count($content));
            error_log("HomeController - Services count: " . count($services));
            error_log("HomeController - Team count: " . count($team));
            error_log("HomeController - News count: " . count($news));
            
            // Si pas de données, forcer l'initialisation
            if (empty($services) || empty($team) || empty($content) || empty($news)) {
                error_log("Données manquantes détectées - réinitialisation");
                $this->forceResetData();
                
                // Récupérer les données à nouveau
                $content = $this->getContent();
                $services = $this->getServices();
                $team = $this->getTeam();
                $news = $this->getNews();
            }
            
            include 'views/home.php';
            
        } catch (Exception $e) {
            error_log("Erreur HomeController::index - " . $e->getMessage());
            
            // En cas d'erreur, utiliser des données par défaut
            $content = $this->getDefaultContent();
            $services = $this->getDefaultServices();
            $team = $this->getDefaultTeam();
            $news = $this->getDefaultNews();
            
            include 'views/home.php';
        }
    }
    
    private function ensureDefaultData() {
        try {
            // Vérifier si les tables ont des données
            $serviceCount = $this->db->query("SELECT COUNT(*) FROM services")->fetchColumn();
            $teamCount = $this->db->query("SELECT COUNT(*) FROM team_members")->fetchColumn();
            $contentCount = $this->db->query("SELECT COUNT(*) FROM site_content")->fetchColumn();
            $newsCount = $this->db->query("SELECT COUNT(*) FROM news")->fetchColumn();
            
            error_log("Counts - Services: $serviceCount, Team: $teamCount, Content: $contentCount, News: $newsCount");
            
            if ($serviceCount == 0) {
                $this->insertDefaultServices();
            }
            
            if ($teamCount == 0) {
                $this->insertDefaultTeam();
            }
            
            if ($contentCount == 0) {
                $this->insertDefaultContent();
            }

            if ($newsCount == 0) {
                $this->insertDefaultNews();
            }
            
        } catch (Exception $e) {
            error_log("Erreur ensureDefaultData: " . $e->getMessage());
        }
    }
    
    private function forceResetData() {
        try {
            // Supprimer et recréer les données
            $this->db->exec("DELETE FROM services");
            $this->db->exec("DELETE FROM team_members");
            $this->db->exec("DELETE FROM site_content");
            $this->db->exec("DELETE FROM news");
            
            $this->insertDefaultServices();
            $this->insertDefaultTeam();
            $this->insertDefaultContent();
            $this->insertDefaultNews();
            
            error_log("Données par défaut réinsérées avec succès");
            
        } catch (Exception $e) {
            error_log("Erreur forceResetData: " . $e->getMessage());
        }
    }
    
    private function getContent() {
        try {
            $stmt = $this->db->query("SELECT section, key_name, value FROM site_content");
            $content = [];
            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $content[$row['section']][$row['key_name']] = $row['value'];
            }
            
            // Si vide, retourner des valeurs par défaut
            if (empty($content)) {
                return $this->getDefaultContent();
            }
            
            return $content;
        } catch (Exception $e) {
            error_log("Erreur getContent: " . $e->getMessage());
            return $this->getDefaultContent();
        }
    }
    
    private function getServices() {
        try {
            $stmt = $this->db->query("SELECT * FROM services WHERE is_active = 1 ORDER BY order_position");
            $services = $stmt->fetchAll(PDO::FETCH_ASSOC);
            
            // Si vide, retourner des services par défaut
            if (empty($services)) {
                return $this->getDefaultServices();
            }
            
            return $services;
        } catch (Exception $e) {
            error_log("Erreur getServices: " . $e->getMessage());
            return $this->getDefaultServices();
        }
    }
    
    private function getTeam() {
        try {
            $stmt = $this->db->query("SELECT id, name, position, description, image_path, order_position, is_active FROM team_members WHERE is_active = 1 ORDER BY order_position");
            $team = $stmt->fetchAll(PDO::FETCH_ASSOC);
            
            // Vérifier les chemins d'image
            foreach ($team as &$member) {
                if (empty($member['image_path']) || !file_exists($_SERVER['DOCUMENT_ROOT'] . $member['image_path'])) {
                    error_log("Image manquante pour {$member['name']}: {$member['image_path']}");
                    $member['image_path'] = '/public/uploads/team/default_team_member.jpg';
                }
            }
            
            // Si vide, retourner une équipe par défaut
            if (empty($team)) {
                return $this->getDefaultTeam();
            }
            
            return $team;
        } catch (Exception $e) {
            error_log("Erreur getTeam: " . $e->getMessage());
            return $this->getDefaultTeam();
        }
    }

    private function getNews() {
        try {
            $stmt = $this->db->query("SELECT * FROM news WHERE is_active = 1 ORDER BY order_position");
            $news = $stmt->fetchAll(PDO::FETCH_ASSOC);
            
            // Vérifier les chemins d'image
            foreach ($news as &$item) {
                if (!empty($item['image_path']) && !file_exists($_SERVER['DOCUMENT_ROOT'] . $item['image_path'])) {
                    $item['image_path'] = null;
                }
            }
            
            if (empty($news)) {
                return $this->getDefaultNews();
            }
            
            return $news;
        } catch (Exception $e) {
            error_log("Erreur getNews: " . $e->getMessage());
            return $this->getDefaultNews();
        }
    }
    
    private function insertDefaultServices() {
        $defaultServices = [
            [
                'title' => 'Droit des Affaires',
                'description' => 'Accompagnement juridique complet pour les entreprises, de la création aux opérations complexes.',
                'icon' => 'fas fa-briefcase',
                'color' => '#3b82f6',
                'order_position' => 1,
                'detailed_content' => $this->getDefaultDetailedContent()
            ],
            [
                'title' => 'Droit de la Famille',
                'description' => 'Conseil et représentation dans tous les aspects du droit familial et matrimonial.',
                'icon' => 'fas fa-heart',
                'color' => '#ef4444',
                'order_position' => 2,
                'detailed_content' => $this->getDefaultDetailedContent()
            ],
            [
                'title' => 'Droit Immobilier',
                'description' => 'Expertise en transactions immobilières, copropriété et contentieux immobiliers.',
                'icon' => 'fas fa-home',
                'color' => '#10b981',
                'order_position' => 3,
                'detailed_content' => $this->getDefaultDetailedContent()
            ],
            [
                'title' => 'Droit du Travail',
                'description' => 'Protection des droits des salariés et conseil aux employeurs en droit social.',
                'icon' => 'fas fa-users',
                'color' => '#f59e0b',
                'order_position' => 4,
                'detailed_content' => $this->getDefaultDetailedContent()
            ]
        ];
        
        $sql = "INSERT INTO services (title, description, icon, color, order_position, detailed_content) VALUES (?, ?, ?, ?, ?, ?)";
        $stmt = $this->db->prepare($sql);
        
        foreach ($defaultServices as $service) {
            $stmt->execute([
                $service['title'],
                $service['description'],
                $service['icon'],
                $service['color'],
                $service['order_position'],
                $service['detailed_content']
            ]);
        }
        
        error_log("Services par défaut insérés");
    }
    
    private function insertDefaultTeam() {
        $defaultTeam = [
            [
                'name' => 'Maître Jean Dupont',
                'position' => 'Avocat Associé - Droit des Affaires',
                'description' => 'Spécialisé en droit des sociétés et fusions-acquisitions, Maître Dupont accompagne les entreprises dans leurs projets de développement depuis plus de 15 ans.',
                'image_path' => '/public/uploads/team/avocat4.jpg',
                'order_position' => 1
            ],
            [
                'name' => 'Maître Marie Martin',
                'position' => 'Avocate Spécialisée - Droit de la Famille',
                'description' => 'Experte en droit matrimonial et protection de l\'enfance, Maître Martin défend avec passion les intérêts de ses clients dans les situations familiales complexes.',
                'image_path' => '/public/uploads/team/avocat5.jpg',
                'order_position' => 2
            ]
        ];
        
        $sql = "INSERT INTO team_members (name, position, description, image_path, order_position) VALUES (?, ?, ?, ?, ?)";
        $stmt = $this->db->prepare($sql);
        
        foreach ($defaultTeam as $member) {
            $stmt->execute([
                $member['name'],
                $member['position'],
                $member['description'],
                $member['image_path'],
                $member['order_position']
            ]);
        }
        
        error_log("Équipe par défaut insérée");
    }
    
    private function insertDefaultContent() {
        $defaultContent = [
            ['hero', 'title', 'Cabinet d\'Excellence Juridique'],
            ['hero', 'subtitle', 'Votre partenaire de confiance pour tous vos besoins juridiques'],
            ['hero', 'cta_text', 'Prendre rendez-vous'],
            ['about', 'title', 'À propos de nous'],
            ['about', 'subtitle', 'Fort de plus de 20 ans d\'expérience, notre cabinet vous accompagne dans tous vos besoins juridiques avec professionnalisme et rigueur.'],
            ['services', 'title', 'Nos services'],
            ['services', 'subtitle', 'Des domaines d\'expertise variés pour répondre à tous vos besoins'],
            ['team', 'title', 'Notre équipe'],
            ['team', 'subtitle', 'Des experts à votre service'],
            ['contact', 'title', 'Contactez-nous'],
            ['contact', 'address', '123 Avenue de la Justice, 75001 Paris'],
            ['contact', 'phone', '+33 1 23 45 67 89'],
            ['contact', 'email', 'contact@cabinet-excellence.fr']
        ];
        
        $sql = "INSERT INTO site_content (section, key_name, value) VALUES (?, ?, ?)";
        $stmt = $this->db->prepare($sql);
        
        foreach ($defaultContent as $content) {
            $stmt->execute($content);
        }
        
        error_log("Contenu par défaut inséré");
    }

    private function insertDefaultNews() {
        $defaultNews = [
            [
                'title' => 'Nouvelle législation sur le droit du travail',
                'content' => '<p>Une nouvelle réforme importante vient d\'être adoptée. Découvrez ce que cela change pour votre entreprise.</p>',
                'image_path' => null,
                'publish_date' => date('Y-m-d'),
                'order_position' => 1
            ],
            [
                'title' => 'Événement : Conférence sur le droit des affaires',
                'content' => '<p>Notre cabinet organise une conférence le 15 septembre. Inscrivez-vous dès maintenant !</p>',
                'image_path' => null,
                'publish_date' => date('Y-m-d', strtotime('-5 days')),
                'order_position' => 2
            ]
        ];

        $sql = "INSERT INTO news (title, content, image_path, publish_date, order_position) VALUES (?, ?, ?, ?, ?)";
        $stmt = $this->db->prepare($sql);
        
        foreach ($defaultNews as $news) {
            $stmt->execute([
                $news['title'],
                $news['content'],
                $news['image_path'],
                $news['publish_date'],
                $news['order_position']
            ]);
        }
        
        error_log("Actualités par défaut insérées");
    }
    
    private function getDefaultDetailedContent() {
        return '
        <h3>Notre approche</h3>
        <p>Nous privilégions une approche personnalisée et sur-mesure pour chaque client. Notre méthode comprend :</p>
        <ul>
            <li>Analyse approfondie de votre situation</li>
            <li>Conseil juridique adapté à vos besoins</li>
            <li>Accompagnement tout au long de la procédure</li>
            <li>Suivi post-dossier et conseils préventifs</li>
        </ul>

        <h3>Pourquoi nous choisir ?</h3>
        <p>Fort de plus de 20 ans d\'expérience, notre cabinet vous garantit :</p>
        <ul>
            <li>Une expertise reconnue dans ce domaine</li>
            <li>Un accompagnement personnalisé</li>
            <li>Une disponibilité et une réactivité optimales</li>
            <li>Des tarifs transparents et compétitifs</li>
        </ul>

        <h3>Première consultation</h3>
        <p>Nous vous proposons une première consultation gratuite pour évaluer votre situation et vous présenter les différentes options qui s\'offrent à vous.</p>
        ';
    }
    
    // Méthodes de fallback avec des données par défaut
    private function getDefaultContent() {
        return [
            'hero' => [
                'title' => 'Cabinet d\'Excellence Juridique',
                'subtitle' => 'Votre partenaire de confiance pour tous vos besoins juridiques',
                'cta_text' => 'Prendre rendez-vous'
            ],
            'about' => [
                'title' => 'À propos de nous',
                'subtitle' => 'Fort de plus de 20 ans d\'expérience, notre cabinet vous accompagne dans tous vos besoins juridiques avec professionnalisme et rigueur.'
            ],
            'services' => [
                'title' => 'Nos services',
                'subtitle' => 'Des domaines d\'expertise variés pour répondre à tous vos besoins'
            ],
            'team' => [
                'title' => 'Notre équipe',
                'subtitle' => 'Des experts à votre service'
            ],
            'contact' => [
                'title' => 'Contactez-nous',
                'address' => '123 Avenue de la Justice, 75001 Paris',
                'phone' => '+33 1 23 45 67 89',
                'email' => 'contact@cabinet-excellence.fr'
            ]
        ];
    }
    
    private function getDefaultServices() {
        return [
            [
                'id' => 1,
                'title' => 'Droit des Affaires',
                'description' => 'Accompagnement juridique complet pour les entreprises, de la création aux opérations complexes.',
                'icon' => 'fas fa-briefcase',
                'color' => '#3b82f6',
                'order_position' => 1,
                'is_active' => 1
            ],
            [
                'id' => 2,
                'title' => 'Droit de la Famille',
                'description' => 'Conseil et représentation dans tous les aspects du droit familial et matrimonial.',
                'icon' => 'fas fa-heart',
                'color' => '#ef4444',
                'order_position' => 2,
                'is_active' => 1
            ],
            [
                'id' => 3,
                'title' => 'Droit Immobilier',
                'description' => 'Expertise en transactions immobilières, copropriété et contentieux immobiliers.',
                'icon' => 'fas fa-home',
                'color' => '#10b981',
                'order_position' => 3,
                'is_active' => 1
            ],
            [
                'id' => 4,
                'title' => 'Droit du Travail',
                'description' => 'Protection des droits des salariés et conseil aux employeurs en droit social.',
                'icon' => 'fas fa-users',
                'color' => '#f59e0b',
                'order_position' => 4,
                'is_active' => 1
            ]
        ];
    }
    
    private function getDefaultTeam() {
        return [
            [
                'id' => 1,
                'name' => 'Maître Jean Dupont',
                'position' => 'Avocat Associé - Droit des Affaires',
                'description' => 'Spécialisé en droit des sociétés et fusions-acquisitions, Maître Dupont accompagne les entreprises dans leurs projets de développement depuis plus de 15 ans.',
                'image_path' => '/public/uploads/team/avocat4.jpg',
                'order_position' => 1,
                'is_active' => 1
            ],
            [
                'id' => 2,
                'name' => 'Maître Marie Martin',
                'position' => 'Avocate Spécialisée - Droit de la Famille',
                'description' => 'Experte en droit matrimonial et protection de l\'enfance, Maître Martin défend avec passion les intérêts de ses clients dans les situations familiales complexes.',
                'image_path' => '/public/uploads/team/avocat5.jpg',
                'order_position' => 2,
                'is_active' => 1
            ]
        ];
    }

    private function getDefaultNews() {
        return [
            [
                'id' => 1,
                'title' => 'Nouvelle législation sur le droit du travail',
                'content' => '<p>Une nouvelle réforme importante vient d\'être adoptée. Découvrez ce que cela change pour votre entreprise.</p>',
                'image_path' => null,
                'publish_date' => date('Y-m-d'),
                'order_position' => 1,
                'is_active' => 1
            ],
            [
                'id' => 2,
                'title' => 'Événement : Conférence sur le droit des affaires',
                'content' => '<p>Notre cabinet organise une conférence le 15 septembre. Inscrivez-vous dès maintenant !</p>',
                'image_path' => null,
                'publish_date' => date('Y-m-d', strtotime('-5 days')),
                'order_position' => 2,
                'is_active' => 1
            ]
        ];
    }
}
?>```